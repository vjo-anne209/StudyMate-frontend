{"version":3,"sources":["components/button.js","components/menuitems.js","components/dropdown.js","components/navbar.js","components/category.js","components/searchbar.js","components/questioncard.js","pages/forum.js","components/intro-section.js","components/landingcard.js","components/card.js","components/footer.js","pages/home.js","pages/signup.js","pages/login.js","components/postlist.js","components/commentlist.js","components/replylist.js","pages/posthistory.js","pages/postpage.js","pages/account.js","pages/timetable.js","pages/todolist.js","App.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","MenuItems","title","path","cName","Dropdown","props","useState","click","setClick","React","onCloseMobileMenu","map","item","index","to","Typography","Navbar","dropdown","setDropdown","open","setOpen","openAlert","setOpenAlert","dueData","id","handleClose","handleCloseAlert","handleClick","closeMobileMenu","onMouseEnter","window","innerWidth","onMouseLeave","extendElement","useEffect","addEventListener","isLoggedIn","isStaff","class","username","handleLogout","number","length","data","Dialog","onClose","aria-labelledby","aria-describedby","Alert","severity","color","AlertTitle","useStyles","makeStyles","container","backgroundColor","borderRadius","marginTop","padding","paddingTop","height","width","display","rowGap","textAlign","paddingLeft","active","margin","fontWeight","categories","Category","classes","styles","useFirebaseBtnStyles","Object","entries","key","value","setCategory","style","cursor","variant","handleFilter","category","theme","resize","fontSize","SearchBar","handleSearch","loadAll","keyword","setKeyword","console","log","TextField","fullWidth","placeholder","size","onChange","e","target","onKeyPress","InputProps","startAdornment","InputAdornment","position","input","root","maxWidth","marginBottom","cover","minHeight","img","info","iconbar","overflow","icons","float","comment","justifySelf","QuestionCard","Card","CardContent","align","creationDate","userID","Chip","label","categoryID","tagID","textContent","upvote","downvote","numOfComment","override","css","justifyContent","topimg","flexDirection","spacing","box","form","Forum","loading","setLoading","posts","setPosts","setActive","alert","useAlert","content","setContent","setTitle","tag","setTag","acadTag","setAcadTag","nonacadTag","setNonAcadTag","selectCategory","setSelectCategory","module","setModule","setPoster","setCategories","setTags","modules","setModules","user","setUser","getTags","getAcademicTag","getNonAcademicTag","getCategories","getModules","axios","get","then","res","postlist","userpost","post","userid","catch","error","headers","Authorization","localStorage","getItem","Fragment","CssBaseline","Box","alignItems","src","alt","Container","CardHeader","onSubmit","preventDefault","moduleCode","err","response","status","show","defaultValue","disabled","required","select","helperText","MenuItem","option","categoryName","tagName","Autocomplete","options","event","newValue","getOptionLabel","renderInput","params","multiline","rows","Grid","xs","split","postID","textDecoration","numOfComments","IntroSection","autoPlay","loop","muted","top","right","left","paper","palette","text","secondary","RoundedButton","withStyles","Landingcard","listStyle","pr","mb","mt","href","card","footer","Home","Copyright","Date","getFullYear","avatar","main","submit","SignUp","setUsername","email","setEmail","password","setPassword","isValidPassword","useMemo","test","component","Avatar","noValidate","handleRegister","name","autoComplete","validationState","justify","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","Login","sm","md","Paper","elevation","square","handleLogin","autoFocus","FormControlLabel","control","Checkbox","border","modal","background","boxShadow","shadows","buttons","marginRight","button","borderColor","PostList","postdata","setPostdata","postDate","setPostDate","handleOpen","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","textcontent","BorrowedBookList","commentdata","setCommentdata","commentDate","setCommentDate","commentID","ReplyList","reply","replydata","setReplydata","replyDate","setReplyDate","replyID","icon","profile","Profile","setData","comments","setComments","replies","setReplies","handleChangeData","newType","useLineNavigationMenuStyles","postid","replyid","commentroot","bullet","transform","pos","line","header","flexGrow","headerTitle","contrastText","appBar","Thread","match","location","useTheme","fullScreen","useMediaQuery","breakpoints","down","setIsStaff","user_post","setUserPost","setCommentsdata","setCommentID","setReplyID","replyContent","setReplyContent","setAnswerer","postEdit","setPostEdit","postTitleEdit","setPostTitleEdit","commentEdit","setCommentEdit","replyEdit","setReplyEdit","setModal","setUpvote","setDownVote","deleteOpen","setDeleteOpen","deleteReplyOpen","setDeleteReplyOpen","editOpen","setEditOpen","like","setLike","dislike","setDislike","editCommOpen","setEditCommOpen","editRepOpen","setRepOpen","repliesUsers","setRepliesUsers","commentsUsers","setCommentsUsers","scroll","setScroll","handleEditComClose","handleEditRepClose","handleModalOpen","scrollType","handleModalClose","handleEditClose","handleDeleteReplyClose","descriptionElementRef","useRef","descriptionElement","current","focus","fetch","json","is_staff","commentusers","date","getUserPost","getComments","getReplies","commentid","userreply","handleDeleteClose","handleSubmitCommentAns","handleEditComment","reload","handleEditReply","onCommentChange","setPost","onCommentEditChange","onReplyEditChange","onReplyChange","handleDeleteComment","delete","handleDeleteReply","subheader","startIcon","data-toggle","data-target","Comment","minWidth","Edit","AppBar","Toolbar","edge","aria-label","DialogContent","DialogActions","Delete","DialogContentText","y","replyCount","role","dividers","ref","tabIndex","setReplyAndID","ans","Transition","forwardRef","Slide","direction","information","paddingBottom","flexShrink","blobimg","marginLeft","flex","years","Account","member","faculty","setFaculty","major","setMajor","year","setYear","majors","setMajors","faculties","setFaculties","yearOfStudy","getFacs","getMajors","getMember","facultyID","majorID","readOnly","TransitionComponent","List","ListItem","majorName","facultyName","mainContainer","dialogTitle","textField","calendar","Timetable","events","setEvents","lessons","setLessons","setEvent","eventDetail","setEventDetail","detail","setDetail","setType","desc","setDesc","start","setStart","end","setEnd","titleEdit","setTitleEdit","descEdit","setDescEdit","startEdit","setStartEdit","endEdit","setEndEdit","eventID","setEventID","setLessonDetail","lessonID","setLessonID","moduleID","setModuleID","editEventOpen","setEditEventOpen","setDelete","handleEditEventClose","handleDetailClose","getEvents","all","resArr","push","slice","moduleid","cmaxWidth","onInputChange","newInputValue","lessonType","classNo","day","startTime","endTime","description","InputLabelProps","shrink","default","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","initialView","dayMaxEventRows","views","dayGridMonth","headerToolbar","center","eventClick","arg","extendedProps","handleDetailOpen","startReal","startStr","endReal","endStr","handleEditEventOpen","lessonid","handleDeleteSchedLesson","eventid","handleDeleteEvent","ListItemText","varian","primary","Divider","zIndex","drawer","drawerPaper","drawerContainer","tooltip","rootCard","flexBasis","selected","MuiListItem","Todolist","taskID","setTaskID","tasks","setTasks","recentTasks","setRecent","todayTask","setTodayTasks","completedTasks","setCompletedTasks","incompleteTasks","setIncompleteTasks","dueTasks","setDueTasks","deadline","setDeadline","completed","setCompleted","submitted","setSubmitted","setComponent","selectedIndex","setSelectedIndex","checkedA","checkedA1","checkedB","checkedC","checkedD","checkedE","checked","setChecked","state","setState","deadlineEdit","setDeadlineEdit","completedEdit","setCompletedEdit","submittedEdit","setSubmittedEdit","subOpen","setSubOpen","handleDeleteOpen","handleSubOpen","handleSubClose","toggleDrawer","anchor","list","onKeyDown","handleListItemClick","ListItemIcon","Notifications","Badge","badgeContent","handleChange","getTasks","getRecentTasks","getCompletedTask","getIncompleteTask","getTodayTasks","getDueTask","handleCompleteTask","taskid","handleSubmitTask","handleEditTask","handleDeleteTask","Snackbar","tickCompletedEdit","tickSubmittedEdit","handleEditOpen","task","Tooltip","Fab","fab","toUpperCase","substring","Drawer","DialogTitle","CardActions","message","withRouter","setIsLoggedIn","setID","method","body","JSON","stringify","ok","Error","setItem","token","history","removeItem","pathname","render","exact","createMuiTheme","typography","fontFamily","join","positions","TOP_CENTER","offset","transition","transitions","SCALE","createBrowserHistory","ReactDOM","StrictMode","ThemeProvider","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.86e94c89.chunk.js","sourcesContent":["import React from 'react';\r\nimport './button.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\r\n\r\nconst SIZES = ['btn--medium', 'btn--large','btn--mobile'];\r\n\r\nexport const Button = ({\r\n  children,\r\n  type,\r\n  onClick,\r\n  buttonStyle,\r\n  buttonSize\r\n}) => {\r\n  const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    : STYLES[0];\r\n\r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  return (\r\n      <button\r\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n        onClick={onClick}\r\n        type={type}\r\n      >\r\n        {children}\r\n      </button>\r\n  );\r\n};","export const MenuItems = [\r\n    {\r\n      title: 'My Account',\r\n      path: '/profile',\r\n      cName: 'dropdown-link'\r\n    },\r\n    {\r\n      title: 'Post',\r\n      path: '/post',\r\n      cName: 'dropdown-link'\r\n    },\r\n  ];","import React, { useState } from 'react';\r\nimport './dropdown.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { MenuItems } from './menuitems';\r\nimport { Badge } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport { ClassNames } from '@emotion/react';\r\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\nimport { typography } from '@material-ui/system';\r\n\r\n\r\nfunction Dropdown(props) {\r\n  const [click, setClick] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const handleClick = () => {\r\n    setClick(true)\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    console.log(open ? \"H\" : \"T\")\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul\r\n        onClick={props.onCloseMobileMenu}\r\n        className={click ? 'dropdown-menu clicked' : 'dropdown-menu'}\r\n      >\r\n        {MenuItems.map((item, index) => {\r\n          return (\r\n            <li key={index}>\r\n                    <Link\r\n                    className={item.cName}\r\n                    to={item.path}\r\n                    onClick={()=>setClick(false)}\r\n                  >\r\n                  <Typography>{item.title}</Typography>\r\n                  </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dropdown;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button } from './button';\r\nimport { Link } from 'react-router-dom';\r\nimport './navbar.css';\r\nimport Dropdown from './dropdown';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { AlertTitle } from '@material-ui/lab';\r\nimport axios from 'axios';\r\nfunction Navbar(props) {\r\n\r\n  const [click, setClick] = React.useState(false);\r\n  const [dropdown, setDropdown] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [dueData, setDuedata] = useState([]);\r\n  const [id, setID] = useState(props.id);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleOpenAlert = () => {\r\n    setOpenAlert(true);\r\n  }\r\n\r\n  const handleCloseAlert = () => {\r\n    setOpenAlert(false);\r\n  }\r\n\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const onMouseEnter = () => {\r\n    if (window.innerWidth < 960) {\r\n      setDropdown(false);\r\n    } else {\r\n      setDropdown(true);\r\n    }\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    if (window.innerWidth < 960) {\r\n      setDropdown(false);\r\n    } else {\r\n      setDropdown(false);\r\n    }\r\n  };\r\n\r\n  const extendElement = () => {\r\n    dropdown ? setDropdown(false) : setDropdown(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    onMouseEnter();\r\n\r\n  }, []);\r\n\r\n  window.addEventListener('resize', onMouseEnter);\r\n\r\n  return (\r\n    !props.isLoggedIn ? (\r\n    <>\r\n      <nav className='navbar'>\r\n        <div className='navbar-container'>\r\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n            StudyMate\r\n            <i class='fab fa-typo3' />\r\n          </Link>\r\n          <div className='menu-icon' onClick={handleClick}>\r\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n            <Link\r\n              to='/forum'\r\n              className='nav-links'\r\n              onClick={closeMobileMenu}\r\n            >\r\n             Q&A Forum\r\n            </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n            <Link\r\n              className='nav-links'\r\n              onClick={() => {closeMobileMenu(); handleOpen()}}\r\n            >\r\n              Schedules\r\n            </Link>\r\n            <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            >\r\n          <Alert severity=\"warning\" onClose={handleClose} color=\"error\">\r\n            <AlertTitle>Warning</AlertTitle>\r\n                Only registered user that can proceed further — <strong>Please sign in to see your timetable</strong>\r\n          </Alert>\r\n        </Dialog>\r\n            </li>\r\n            <li className='nav-item'>\r\n            <Link\r\n              className='nav-links'\r\n              onClick={() => {closeMobileMenu();handleOpenAlert()}}\r\n            >\r\n              To Do List\r\n            </Link>\r\n            <Dialog\r\n            open={openAlert}\r\n            onClose={handleCloseAlert}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            >\r\n          <Alert severity=\"warning\" onClose={handleCloseAlert} color=\"error\">\r\n            <AlertTitle>Warning</AlertTitle>\r\n                Only registered user that can proceed further — <strong>Please sign in to see your to-do list</strong>\r\n          </Alert>\r\n        </Dialog>\r\n            </li>\r\n            <li>\r\n            {dropdown ? (\r\n                  <Link to='/login' className='nav-links-mobile'>\r\n                    <Button buttonStyle='btn--outline'>Login</Button>\r\n                  </Link>\r\n                ) : (\r\n                  <Link to='/login' className='nav-links-mobile'>\r\n                    <Button\r\n                      buttonStyle='btn--outline'\r\n                      buttonSize='btn--mobile'\r\n                      onClick={closeMobileMenu}\r\n                    >Login\r\n                        </Button>\r\n                        </Link>)}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  ) :(\r\n    !props.isStaff ? (\r\n    <>\r\n    <nav className='navbar'>\r\n      <div className='navbar-container'>\r\n        <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n          StudyMate\r\n          <i class='fab fa-typo3' />\r\n        </Link>\r\n        <div className='menu-icon' onClick={handleClick}>\r\n          <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n        </div>\r\n        <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n          <li className='nav-item'>\r\n            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link\r\n              to='/forum'\r\n              className='nav-links'\r\n              onClick={closeMobileMenu}\r\n            >\r\n             Q&A Forum\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link\r\n              to='/schedules'\r\n              className='nav-links'\r\n              onClick={closeMobileMenu}\r\n            >\r\n              Schedules\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link\r\n              to='/todolist'\r\n              className='nav-links'\r\n              onClick={closeMobileMenu}\r\n            >\r\n              To Do List\r\n            </Link>\r\n          </li>\r\n          <li className='nav-links-mobile'  onMouseEnter={onMouseEnter}\r\n            onMouseLeave={onMouseLeave} onClick={extendElement}>\r\n              <Button buttonStyle='primary' class=\"dropbtn\">\r\n                Hi, {props.username}!\r\n                <i class=\"fa fa-caret-down\"></i>\r\n              </Button>\r\n              {dropdown && <Dropdown  \r\nonCloseMobileMenu={closeMobileMenu} number={dueData.length} data={props.dueData}/>}\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to='/'\r\n              className='nav-links-mobile'\r\n              onClick={(() => props.handleLogout())}\r\n            >\r\n              <Button buttonStyle='btn--outline'>Log Out</Button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </>\r\n  ) : (\r\n    <>\r\n    <nav className='navbar'>\r\n  <div className='navbar-container'>\r\n    <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n      StudyMate\r\n      <i class='fab fa-typo3' />\r\n    </Link>\r\n    <div className='menu-icon' onClick={handleClick}>\r\n      <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n    </div>\r\n    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n      <li className='nav-item'>\r\n        <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li className='nav-links-mobile'  onMouseEnter={onMouseEnter}\r\n            onMouseLeave={onMouseLeave} onClick={extendElement}>\r\n              <Button buttonStyle='primary' class=\"dropbtn\">\r\n                Hi, {props.username}!\r\n                <i class=\"fa fa-caret-down\"></i>\r\n              </Button>\r\n              {dropdown && <Dropdown  \r\nonCloseMobileMenu={closeMobileMenu}/>}\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to='/'\r\n              className='nav-links-mobile'\r\n              onClick={(() => props.handleLogout())}\r\n            >\r\n              <Button buttonStyle='btn--outline'>Log Out</Button>\r\n            </Link>\r\n          </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n</>\r\n  )));\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\nimport {\r\n    CategoryProvider,\r\n    CategoryTitle,\r\n    CategoryItem,\r\n} from \"@mui-treasury/components/menu/category\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { YearPicker } from \"react-dropdown-date\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useFirebaseBtnStyles } from \"@mui-treasury/styles/button/firebase\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        backgroundColor: \"#E7ECEF\",\r\n        borderRadius: \"10px\",\r\n        marginTop: \"5vh\",\r\n        padding: \"1rem\",\r\n        paddingTop: 0,\r\n        height: \"30vh\",\r\n        width: \"20vw\",\r\n        display: \"grid\",\r\n        rowGap: 0,\r\n        textAlign: \"left\",\r\n        paddingLeft: \"1rem\",\r\n    },\r\n    active: {\r\n        margin: 0,\r\n        padding: 0,\r\n        fontWeight: \"bold\",\r\n    },\r\n});\r\n\r\nconst categories =    \r\n    {\"ACAD\" : \"Academic\",\r\n    \"NON-ACAD\" : \"Non-Academic\"};\r\n\r\nexport default function Category(props) {\r\n    const classes = useStyles();\r\n    const styles = useFirebaseBtnStyles();\r\n    return (\r\n        <div className={classes.container}>\r\n            <CategoryProvider>\r\n                <CategoryTitle>Categories</CategoryTitle>\r\n                {Object.entries(categories).map(([key, value]) => {\r\n                    return (\r\n                        <CategoryItem\r\n                            className={\r\n                                props.key == key\r\n                                    ? classes.active\r\n                                    : null\r\n                            }\r\n                            onClick={() => props.setCategory(key)}\r\n                            style={{ cursor: \"pointer\" }}\r\n                        >\r\n                            {value}\r\n                        </CategoryItem>\r\n                    );\r\n                })}\r\n                <Button\r\n                    style={{ marginTop: \"1.5rem\", width: \"95%\" }}\r\n                    classes={styles}\r\n                    variant={\"contained\"}\r\n                    color={\"primary\"}\r\n                    onClick={() =>\r\n                        props.handleFilter(props.category)\r\n                    }\r\n                >\r\n                    Filter\r\n                </Button>\r\n            </CategoryProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        marginTop: 50,\r\n        width: \"50%\",\r\n    },\r\n    resize: {\r\n        fontSize: 26,\r\n    },\r\n}));\r\n\r\nexport default function SearchBar({ handleSearch, loadAll }) {\r\n    const classes = useStyles();\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    console.log(keyword);\r\n\r\n    const handleInput = (e) => {\r\n        setKeyword(e.target.value);\r\n    };\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            if (keyword == \"\") {\r\n                loadAll();\r\n            } else {\r\n                handleSearch(keyword);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                fullWidth\r\n                className={classes.margin}\r\n                placeholder=\"Search\"\r\n                size=\"medium\"\r\n                onChange={handleInput}\r\n                onKeyPress={handleEnterPress}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <SearchIcon fontSize=\"large\" />\r\n                        </InputAdornment>\r\n                    ),\r\n                    classes: {\r\n                        input: classes.resize,\r\n                    },\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport { CardMedia } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 600,\r\n        color: \"black\",\r\n        margin: \"20px\",\r\n        marginBottom: 10,\r\n        backgroundColor: \"#f7f3f5\",\r\n        display: \"grid\",\r\n        paddingTop: \"10px\",\r\n        display :\"flex\"\r\n    },\r\n    cover: {\r\n        width: \"100%\",\r\n        minHeight: 320,\r\n    },\r\n    img: {\r\n        width: \"100%\",\r\n    },\r\n    info: {\r\n        backgroundColor: \"#f7f3f5\",\r\n    },\r\n    iconbar: {\r\n        width: \"100%\", /* Full-width */\r\n        overflow: \"auto\",\r\n    },\r\n    icons: {\r\n        float: \"left\",\r\n        width: \"20%\",\r\n        textAlign: \"center\",\r\n\r\n    },\r\n    comment: {\r\n        justifySelf: \"start\",\r\n    }\r\n}));\r\n\r\nexport default function QuestionCard(props) {\r\n    const classes = useStyles();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent className={classes.info}>\r\n                <Typography variant=\"body2\" align=\"left\" color=\"textSecondary\">\r\n                    {\"Posted on: \" + props.creationDate}\r\n                </Typography>\r\n                <Typography\r\n                    variant=\"subtitle1\"\r\n                    align=\"left\"\r\n                    color=\"textSecondary\"\r\n                >\r\n                    {\"Posted by : \"  + props.userID}\r\n                </Typography>\r\n                <Typography variant=\"h6\" align=\"left\">\r\n                    {props.title}\r\n                </Typography>\r\n                <Chip label={props.categoryID} />\r\n                <Chip label= {props.tagID}/>\r\n                <Typography variant=\"subtitle1\" align=\"left\">\r\n                    {props.textContent}\r\n                </Typography>\r\n                <div className={classes.iconbar}>\r\n                <Typography variant=\"subtitle1\" align=\"left\" className={classes.icons}>\r\n                    {props.upvote}\r\n                    <ThumbUpIcon color=\"secondary\" className={classes.icons}/>\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" align=\"left\" className={classes.icons}>\r\n                    {props.downvote}\r\n                <ThumbDownIcon color=\"secondary\" className={classes.icons}/>\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" align=\"left\" className={classes.icons}>\r\n                    <Link to=\"/post-page\" className={classes.comment}>\r\n                        <ChatBubbleIcon color=\"secondary\" className={classes.icons}>\r\n                        </ChatBubbleIcon>\r\n                    </Link>\r\n                    {props.numOfComment}\r\n                </Typography>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import Category from \"../components/category\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FadeLoader } from \"react-spinners\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, CssBaseline } from \"@material-ui/core\";\r\nimport { css } from \"@emotion/react\";\r\nimport SearchBar from \"../components/searchbar\";\r\nimport QuestionCard from \"../components/questioncard\";\r\nimport Card from '@material-ui/core/Card';\r\nimport { CardHeader } from \"@material-ui/core\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { SettingsInputComponent, SettingsOutlined } from \"@material-ui/icons\";\r\n\r\n\r\nconst override = css`\r\n  display: flex;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  align-text: center;\r\n`;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        justifyContent:\"center\",\r\n        backgroundColor: \"#e2c2b3\",\r\n        width : \"100%\",\r\n        overflow: \"hidden\",\r\n    },\r\n    topimg: {\r\n        marginTop: \"100px\",\r\n        height: \"50vh\",\r\n        marginBottom: \"0\",\r\n        display:\"flex\",\r\n        width : \"50%\"\r\n    },\r\n    root: {\r\n        width: 700,\r\n        flexDirection: \"column\",\r\n        padding: theme.spacing(2),\r\n        marginBottom: 10,\r\n        marginTop: 30,\r\n        display:\"flex\"\r\n    },\r\n\r\n    box : {\r\n        backgroundColor: \"#e2c2b3\"\r\n    },\r\n    \r\n    form :  {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        maxWidth: '30ch',\r\n    },\r\n}\r\n}));\r\n\r\nfunction Forum(props) {\r\n    const [category, setCategory] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const [posts, setPosts] = useState([]);\r\n    const classes = useStyles();\r\n    const [active, setActive] = useState(\"\");\r\n    const [userpost, setUserPost] = useState({});\r\n    const alert = useAlert();   \r\n    const [post, setPost] = useState({});\r\n    const [content, setContent] = useState(\"\");\r\n    const [title, setTitle]  = useState(\"\");\r\n    const [tag, setTag] = useState(\"\");\r\n    const [acadTag, setAcadTag] = useState([]);\r\n    const [nonacadTag, setNonAcadTag] = useState([]);\r\n    const [selectCategory, setSelectCategory] = useState(\"\");\r\n    const [module, setModule] = useState(\"\");\r\n    const [moduleLabel, setModuleLabel] = useState(\"\");\r\n    const [poster, setPoster] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [tags, setTags] = useState([]);\r\n    const [modules, setModules] = useState([]);\r\n    const [value, setValue] = React.useState(null);\r\n    const [user, setUser] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        loadAll();\r\n        setActive(\"forum\");\r\n        getTags();\r\n        getAcademicTag();\r\n        getNonAcademicTag();\r\n        getCategories();\r\n        getModules();\r\n        console.log(props.username)\r\n    }, []);\r\n\r\n    const loadAll= () => {\r\n        axios\r\n        .get(\"http://localhost:8000/server/postlist/\")\r\n        .then((res) => {\r\n            const postlist = res.data;\r\n            setPosts(postlist);\r\n            console.log(postlist)\r\n            const userpost = {};\r\n            res.data.map((post) => {\r\n                const userid = post.userID;\r\n                axios\r\n                .get(`http://localhost:8000/server/getuserbyID/${userid}/`)\r\n                .then((res) => {\r\n                    userpost[userid] = res.data.username;\r\n                    setUser(userpost);\r\n                })\r\n                .catch((error) => console.log(error));\r\n            }) \r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    const getPosts = () => {\r\n        axios\r\n        .get(\"http://localhost:8000/server/postlist/\")\r\n        .then((res) => {\r\n            const postlist = res.data;\r\n            setPosts(postlist);\r\n            console.log(postlist)\r\n            const userpost = {};\r\n            res.data.map((post) => {\r\n                const userid = post.userID;\r\n                axios\r\n                .get(`http://localhost:8000/server/getuserbyID/${userid}/`)\r\n                .then((res) => {\r\n                    userpost[userid] = res.data.username;\r\n                    setUser(userpost);\r\n                })\r\n                .catch((error) => console.log(error));\r\n            })\r\n            console.log(user); \r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n        setActive(\"forum\");\r\n        getTags();\r\n        getAcademicTag();\r\n        getNonAcademicTag();\r\n        getCategories();\r\n        getModules();\r\n        console.log(props.username)\r\n    }\r\n\r\n    const getTags = () => {\r\n        axios\r\n        .get(\"http://localhost:8000/server/taglist/\")\r\n        .then((res) => {\r\n            setTags(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n};\r\n\r\n\r\n    const getAcademicTag = () => {\r\n        axios\r\n        .get(\"http://localhost:8000/server/tagbycategory/1/\",{\r\n        headers: {\r\n            Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n        },})\r\n        .then((res) => {\r\n            setAcadTag(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    };\r\n\r\n    const getNonAcademicTag = () => {\r\n        axios\r\n        .get(\"http://localhost:8000/server/tagbycategory/2/\",{\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n        },})\r\n        .then((res) => {\r\n            setNonAcadTag(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    };\r\n\r\n    const getCategories = () => {\r\n        axios\r\n        .get(\"http://localhost:8000/server/categorylist/\")\r\n        .then((res) => {\r\n            setCategories(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    };\r\n\r\n    const getModules = () => {\r\n        axios\r\n        .get(\"http://localhost:8000/server/modulelist/\")\r\n        .then((res) => {\r\n            setModules(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    \r\n    const handleSearch = (keyword) => {\r\n        axios\r\n            .get(`http://localhost:8000/server/search/?q=${keyword}`\r\n            \r\n            )\r\n            .then((res) => {\r\n                setPosts(res.data);\r\n                setLoading(false);\r\n                setCategory(\"\");\r\n                console.log(res.data)\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const handleFilter = (category) => {\r\n        axios\r\n            .get(\r\n                `http://localhost:8000/server/filterbycategory/?search=${category}`)\r\n            .then((res) => {\r\n                setPosts(res.data);\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                if (\r\n                    err.response.status === 401 ||\r\n                    err.response.status === 404\r\n                ) {\r\n                    alert.show(\"Your session has expired. Please Log In again to comment this answer\");\r\n                } else {\r\n                    console.log(err.response);\r\n                    console.log(err.response.data.res);\r\n                    alert.show(err.response.data.res);\r\n                }\r\n            });\r\n            }\r\n\r\n\r\n            const handleSubmitPost = (e) => {\r\n                e.preventDefault();\r\n                axios\r\n                .post(`\r\n                http://localhost:8000/server/createpost/`,\r\n                {\r\n                    title : title,\r\n                    userID : props.id,\r\n                    textContent : content,\r\n                    categoryID : selectCategory,\r\n                    tagID : tag,\r\n                    moduleCode : module,\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n                handleOpen();\r\n                setModule(\"\");\r\n                setSelectCategory(\"\");\r\n                setContent(\"\");\r\n                setTag(\"\");\r\n                setTitle(\"\");\r\n                getPosts();\r\n                return res;\r\n            })\r\n            .catch((err) => {\r\n                if (\r\n                    err.response.status === 401 ||\r\n                    err.response.status === 404\r\n                ) {\r\n                    alert.show(\"Your session has expired. Please Log In to submit a question\");\r\n                } else {\r\n                    console.log(err.response);\r\n                    console.log(err.response.data.res);\r\n                    alert.show(err.response.data.res);\r\n                }\r\n            });\r\n            }\r\n\r\n    const onQuestionChange = e => {\r\n        setContent(e.target.value);\r\n        setPoster(props);\r\n    };\r\n\r\n    const onTitleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const onTagChange = (e) => {\r\n        setTag(e.target.value);\r\n    }\r\n\r\n    const onCategoryChange =(e) => {\r\n        setSelectCategory(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main style={{backgroundColor: \"#e2c2b3\"}}>\r\n                <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                flexDirection='column'\r\n                width = \"100%\"\r\n                className = {classes.box}\r\n                >\r\n                    <img\r\n                        src='/images/faq.svg'\r\n                        alt=\"FAQ\"\r\n                        className={classes.topimg}\r\n                    />\r\n                    <SearchBar handleSearch={handleSearch} loadAll={loadAll} />\r\n\r\n                </Box>\r\n                <Container maxWidth=\"false\" className={classes.container}>\r\n                <Card className = {classes.root} style={{backgroundColor:\"#f7f3f5\"}}>\r\n                    <CardHeader\r\n                    title=\"Hi, what's your question?\"\r\n                    /> \r\n                        <CardContent>\r\n                            <form className=\"post pb-4\" onSubmit={handleSubmitPost} className={classes.form}>\r\n                                    <div className=\"form-row align-items-left mb-3 ml-3\">\r\n                                        <div>\r\n                                        <TextField\r\n                                            style = {{width: \"60ch\"}}\r\n                                            id=\"outlined-multiline-static\"\r\n                                            defaultValue=\"Default Value\"\r\n                                            variant=\"outlined\"\r\n                                            placeholder=\"Title\"\r\n                                            value={title}\r\n                                            onChange={onTitleChange}\r\n                                            disabled={!props.username}\r\n                                            required />\r\n                                        </div>\r\n                                        <div>\r\n                                            <TextField\r\n                                                style = {{width: \"20ch\"}}\r\n                                                id=\"outlined-multiline-static\"\r\n                                                select\r\n                                                variant=\"outlined\"\r\n                                                placeholder=\"Category\"\r\n                                                value={selectCategory}\r\n                                                onChange={onCategoryChange}\r\n                                                helperText=\"Category\"\r\n                                                disabled={!props.username}\r\n                                                required >\r\n                                                <MenuItem value=\"\" disabled>\r\n                                                    Category\r\n                                                </MenuItem>\r\n                                                {categories.map((option) => (\r\n                                                    <MenuItem value={option.categoryID}>\r\n                                                    {option.categoryName}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                             </TextField>             \r\n                                             <TextField\r\n                                                style = {{width: \"20ch\"}}\r\n                                                id=\"outlined-multiline-static\"\r\n                                                select\r\n                                                variant=\"outlined\"\r\n                                                placeholder=\"Tag\"\r\n                                                defaultValue=\"Default Value\"\r\n                                                value={tag}\r\n                                                onChange={e =>{\r\n                                                setTag(e.target.value)}}\r\n                                                disabled={!props.username}\r\n                                                helperText=\"Tag\"\r\n                                                required >\r\n                                                \r\n                                                {selectCategory == \"ACAD\" && acadTag.map((option) => (\r\n                                                    <MenuItem value={option.tagID}>\r\n                                                    {option.tagName}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                                                                                \r\n                                                {selectCategory == \"NON-ACAD\" && nonacadTag.map((option) => (\r\n                                                    <MenuItem value={option.tagID}>\r\n                                                    {option.tagName}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n\r\n                                             </TextField>\r\n                                             \r\n                                            {tag == \"Module\" &&\r\n                                            <>\r\n                                            <Autocomplete\r\n                                                id=\"controllable-states-demo\"\r\n                                                options={modules}\r\n                                                onChange = {(event,newValue) => {\r\n                                                    setModule(newValue.moduleCode);\r\n                                                }}\r\n                                                getOptionLabel={option => option.moduleCode}\r\n                                                style={{ width: 300 }}\r\n                                                renderInput={(params) => <TextField {...params} label=\"Module\" variant=\"outlined\" />}\r\n                                            />\r\n                                            </>\r\n                                            }\r\n                                            </div>\r\n                                    \r\n                                            \r\n                                        <div>\r\n                                    <TextField\r\n                                        style = {{width: \"60ch\"}}\r\n                                        id=\"outlined-multiline-static\"\r\n                                        multiline\r\n                                        rows={3}\r\n                                        defaultValue=\"Default Value\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"What is your question? \"\r\n                                        value={content}\r\n                                        onChange={onQuestionChange}\r\n                                        disabled={!props.username}\r\n                                        required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <small className=\"form-text text-muted col-sm-11\">\r\n                                        Inappropriate or irrelevant questions will be filtered accordingly.\r\n                                    </small>       \r\n                                    \r\n                                    <br />\r\n                                    <Button type=\"submit\" color=\"secondary\" variant=\"contained\" \r\n                                    disabled={content== \"\" ? true : false}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                            </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n            <main>\r\n                {loading ? (\r\n                    <div className={classes.loading}>\r\n                        <FadeLoader\r\n                            loading={loading}\r\n                            color=\"#2176ff\"\r\n                            css={override}\r\n                            size={150}\r\n                        />\r\n                    </div>\r\n                    ) : (\r\n                    <Container maxWidth=\"false\" className={classes.container}>\r\n                    <Category\r\n                        category={category}\r\n                        setCategory={setCategory}\r\n                        handleFilter={handleFilter}\r\n                    />\r\n                        <Grid container xs={12} style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                            {posts.map((post) => {\r\n                                const d = post.creationDate\r\n                                const e = d.split(\"T\")[0]\r\n                                return (\r\n                                    <>\r\n                                        <Link\r\n                                            to={`/post-page/${post.postID}`}\r\n                                            style={{ textDecoration: \"none\" }}\r\n                                        >\r\n                                            <QuestionCard\r\n                                                userID={user[post.userID]}\r\n                                                creationDate = {e}\r\n                                                title={post.title}\r\n                                                categoryID = {post.categoryID}\r\n                                                tagID = {post.tagID}\r\n                                                textContent = {post.textContent}\r\n                                                upvote = {post.upvote}\r\n                                                downvote = {post.downvote}\r\n                                                numOfComment = {post.numOfComments}\r\n                                            />\r\n                                        </Link>\r\n                                    </>\r\n                                );\r\n                        })}\r\n                        </Grid>\r\n                    </Container>\r\n                    )}            \r\n                </main>\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n}\r\n\r\nexport default Forum;","import React from 'react';\r\nimport '../App.css';\r\nimport { Button } from './button';\r\nimport './intro-section.css';\r\nimport {Link} from 'react-router-dom';\r\nfunction IntroSection(props) {\r\n  return (\r\n    (!props.isLoggedIn ? (\r\n    <div className='hero-container'>\r\n        <video src='/images/books.mp4' autoPlay loop muted ></video>\r\n        <h1>Welcome to Study Mate</h1>\r\n        <p>Make your study life easier to manage with us</p>\r\n        <div className='hero-btns'>\r\n          <Link className='hero-start' to='/login'>\r\n            <Button\r\n              className='btns'\r\n              buttonStyle='btn--outline'\r\n              buttonSize='btn--large'\r\n            >\r\n              GET STARTED\r\n            </Button>\r\n            </Link>\r\n        </div>\r\n      </div> ) : (\r\n            <div className='hero-container'>\r\n            <video src='/images/books.mp4' autoPlay loop muted ></video>\r\n            <h1>Welcome, {props.username}!</h1>\r\n            <p>Make your study life easier to manage with us</p>\r\n          </div> \r\n      )\r\n    ));\r\n  }\r\n\r\nexport default IntroSection;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Typography, Button, Box } from \"@material-ui/core\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    top: {\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        padding: \"0 80px\",\r\n    },\r\n    right: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    left: {\r\n        textAlign: \"left\",\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    topimg: {\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nconst RoundedButton = withStyles((theme) => ({\r\n    root: {\r\n        width: \"200px\",\r\n        height: \"50px\",\r\n        borderRadius: \"10px\",\r\n    },\r\n}))(Button);\r\n\r\nexport default function Landingcard() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n        <li style={{listStyle:\"none\"}}>\r\n        <Container maxWidth=\"lg\" className={classes.top}>\r\n            <Grid container xs={6} className={classes.left} alignItems=\"center\">\r\n                <Box pr={10}>\r\n                    <Box mb={2} mt={-9}>\r\n                        <Typography variant=\"h4\">\r\n                            BT2102 Assignment 1\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box mb={6}>\r\n                        <Typography variant=\"h6\">\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing\r\n                            elit.\r\n                        </Typography>\r\n                    </Box>\r\n                    <Link\r\n                        to=\"/library\"\r\n                        style={{ textDecoration: \"none\", color: \"white\" }}\r\n                    >\r\n                        <RoundedButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            href=\"#\"\r\n                            size=\"large\"\r\n                        >\r\n                            Browse Books\r\n                        </RoundedButton>\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={6} className={classes.right}>\r\n                <img\r\n                    src='/images/void.svg'\r\n                    alt=\"Person reading a book\"\r\n                    className={classes.topimg}\r\n                />\r\n            </Grid>\r\n        </Container>\r\n        </li>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport CardItem from './landingcard';\r\nimport './card.css';\r\nimport { Button } from './button';\r\nfunction card() {\r\n    return (\r\n        <div className='cards'>\r\n            <h1>Check out all the features that we offer!</h1>\r\n            <div className='cards-container'>\r\n                <div className='cards-warpper'>\r\n                    <ul className='cards-items'>\r\n                        <CardItem\r\n                        label='Your own personalized timetable'\r\n                        src='images/calendar.svg'\r\n                        text='Organise your classes, tasks, exams and your personal schedules with StudyMate'\r\n                        path='/schedule'>\r\n                        </CardItem>\r\n                        <CardItem\r\n                        label='Q&A Forum'\r\n                        src='/images/discussion.svg'\r\n                        text='Get to ask questions regarding academic and non-academic matters \r\n                        and connect students to help one another'\r\n                        path='/forum'>\r\n                        </CardItem>\r\n                    </ul>\r\n                    <ul className='cards-items'>\r\n                        <CardItem\r\n                        label ='Assignments & Exams List'\r\n                        src='/images/task_list.svg'\r\n                        text='StudyMate helps you to keep track of more than just homework'\r\n                        path='/assignment-exam'>\r\n                        </CardItem>\r\n                        <CardItem\r\n                        label ='Notification'\r\n                        src='/images/notification.svg'\r\n                        text='Get notified about incomplete tasks \r\n                        and upcoming exams with our website'\r\n                        path='/notification'>\r\n                        </CardItem>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default card\r\n","import React from 'react'\r\nimport './footer.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from './button';\r\n\r\nfunction footer() {\r\n    return (\r\n        <div className='footer-container'>\r\n            <div className='footer-links'>\r\n                <div className=\"footer-link-wrapper\">\r\n                    <div className=\"footer-link-items\">\r\n                        <h2>About Us</h2>\r\n                        <Link to='/'>How it works</Link>\r\n                        <Link to=\"/\">Testimonials</Link>\r\n                        <Link to=\"/\">Terms of Service</Link>\r\n                    </div>\r\n                    <div className=\"footer-link-items\">\r\n                        <h2>Contact Us</h2>\r\n                        <Link to='/'>Detailst</Link>\r\n                        <Link to=\"/\">Support</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer\r\n","import React, { useState } from \"react\";\r\nimport Navbar  from '../components/navbar'; \r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \r\nimport '../App.css';\r\nimport Forum from './forum';\r\nimport IntroSection from \"../components/intro-section\";\r\nimport Card from '../components/card';\r\nimport Footer from '../components/footer';\r\nfunction Home(props) {\r\n    return (\r\n        !props.isStaff ?(\r\n        <>\r\n            \r\n            <Card/>\r\n            <Footer/>\r\n        </>\r\n        ) : (\r\n            <Forum {...props}/>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        paddingTop: theme.spacing(17),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"e1234567@u.nus.edu\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const isValidPassword = React.useMemo(() =>\r\n    /e\\S+@u.nus.edu/.test(email),\r\n    [email]\r\n    )\r\n    const handleUsername = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const handlePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register Now!\r\n                </Typography>\r\n                <form\r\n                    className={classes.form}\r\n                    noValidate\r\n                    onSubmit={(e) =>\r\n                        props.handleRegister(e, {\r\n                            username: username,\r\n                            email : email,\r\n                            password: password,\r\n                        })\r\n                    }\r\n                >\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"username\"\r\n                                value={username}\r\n                                onChange={handleUsername}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                error = {isValidPassword ? false : true}\r\n                                variant=\"outlined\"\r\n                                validationState={isValidPassword ? 'valid' : 'invalid'}\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                placeholder=\"e1234567@u.nus.edu\"\r\n                                autoComplete=\"email\"\r\n                                value={email}\r\n                                helperText={isValidPassword ? \"\" : \"Please sign up with your NUS student email\"}\r\n                                onChange={handleEmail}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                value={password}\r\n                                onChange={handlePassword}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item>\r\n                            <Link\r\n                                to=\"/login\"\r\n                                style={{\r\n                                    textDecoration: \"none\",\r\n                                    color: \"#2176ff\",\r\n                                }}\r\n                            >\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(/images/login.svg)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'contain',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleUsername = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const handlePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                    <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form\r\n                        className={classes.form}\r\n                        noValidate\r\n                        onSubmit={(e) =>\r\n                            props.handleLogin(e, {\r\n                                username: username,\r\n                                password: password,\r\n                            })\r\n                        }\r\n                    >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            autoComplete=\"username\"\r\n                            autoFocus\r\n                            value={username}\r\n                            onChange={handleUsername}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            value={password}\r\n                            onChange={handlePassword}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me\"\r\n                        />\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid item>\r\n                                <Link\r\n                                    to=\"/sign-up\"\r\n                                    style={{\r\n                                        textDecoration: \"none\",\r\n                                        color: \"#564B48\",\r\n                                    }}\r\n                                >\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    <Box mt={5}>\r\n                    <Copyright />\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { useFirebaseBtnStyles } from \"@mui-treasury/styles/button/firebase\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\",\r\n        height: 100,\r\n        color: \"black\",\r\n        margin: 10,\r\n        marginBottom: 20,\r\n        borderRadius: 10,\r\n        border: \"1px solid black\",\r\n    },\r\n    cover: {\r\n        width: \"100%\",\r\n    },\r\n    title: {},\r\n    textContent : {},\r\n    info: {\r\n        margin: 20,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    modal: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    buttons: {\r\n        marginRight: 30,\r\n    },\r\n    button: {\r\n        margin: 10,\r\n        backgroundColor: \"#14cc60\",\r\n        borderColor: \"#14cc60\",\r\n    },\r\n}));\r\n\r\nexport default function PostList({ post }) {\r\n    const styles = useFirebaseBtnStyles();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState(post);\r\n    const [postdata, setPostdata] = useState({});\r\n    const [postDate, setPostDate] = useState(\"\");\r\n    const alert = useAlert();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8000/server/viewpost/${data.postID}/`)\r\n            .then((res) => {\r\n                setPostdata(res.data);\r\n                setPostDate((res.data.creationDate).split(\"T\")[0]);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n   \r\n    return (\r\n        <Card className={classes.root} elevation=\"0\">\r\n            <div className={classes.info}>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    onClick={handleOpen}\r\n                    className={classes.title}\r\n                >\r\n                    {postdata.title}\r\n                </Typography>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    onClick={handleOpen}\r\n                    className={classes.textContent}\r\n                >\r\n                    {postdata.textContent}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                    {\"Posted on :\"  + postDate}\r\n                </Typography>\r\n\r\n            </div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">Transition modal</h2>\r\n                        <p id=\"transition-modal-description\">\r\n                            Post\r\n                        </p>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </Card>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { useFirebaseBtnStyles } from \"@mui-treasury/styles/button/firebase\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\",\r\n        height: 100,\r\n        color: \"black\",\r\n        margin: 10,\r\n        marginBottom: 20,\r\n        borderRadius: 10,\r\n        border: \"1px solid black\",\r\n    },\r\n    cover: {\r\n        width: \"100%\",\r\n    },\r\n    title : {},\r\n    textcontent : {},\r\n    info: {\r\n        margin: 20,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    modal: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    buttons: {\r\n        marginRight: 30,\r\n    },\r\n    button: {\r\n        margin: 10,\r\n        backgroundColor: \"#14cc60\",\r\n        borderColor: \"#14cc60\",\r\n    },\r\n}));\r\n\r\nexport default function BorrowedBookList({ comment }) {\r\n    const styles = useFirebaseBtnStyles();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState(comment);\r\n    const [commentdata, setCommentdata] = useState({});\r\n    const [postdata, setPostdata] = useState({});\r\n    const [commentDate, setCommentDate] = useState(\"\");\r\n    const alert = useAlert();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8000/server/viewcomment/${data.commentID}/`,\r\n            {\r\n                headers: {\r\n                    Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                },\r\n            }\r\n            )\r\n            .then((res) => {\r\n                setCommentdata(res.data);\r\n                setCommentDate((res.data.creationDate).split(\"T\")[0]);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8000/server/commentparent/${data.commentID}/`,\r\n            {\r\n                headers: {\r\n                    Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                },\r\n            })\r\n            .then((res) => {\r\n                setPostdata(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n   \r\n    return (\r\n        <Card className={classes.root} elevation=\"0\">\r\n            <div className={classes.info}>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    onClick={handleOpen}\r\n                    className={classes.title}\r\n                >\r\n                    {postdata.title}\r\n                </Typography>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    onClick={handleOpen}\r\n                    className={classes.textcontent}\r\n                >\r\n                    {commentdata.textContent}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                    {\"Posted on :\"  + commentDate}\r\n                </Typography>\r\n\r\n            </div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">Transition modal</h2>\r\n                        <p id=\"transition-modal-description\">\r\n                            Comment\r\n                        </p>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </Card>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { useFirebaseBtnStyles } from \"@mui-treasury/styles/button/firebase\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\",\r\n        height: 100,\r\n        color: \"black\",\r\n        margin: 10,\r\n        marginBottom: 20,\r\n        borderRadius: 10,\r\n        border: \"1px solid black\",\r\n    },\r\n    cover: {\r\n        width: \"100%\",\r\n    },\r\n    title: {},\r\n    textcontent : {},\r\n    info: {\r\n        margin: 20,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    modal: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    buttons: {\r\n        marginRight: 30,\r\n    },\r\n    button: {\r\n        margin: 10,\r\n        backgroundColor: \"#14cc60\",\r\n        borderColor: \"#14cc60\",\r\n    },\r\n}));\r\n\r\nexport default function ReplyList({ reply }) {\r\n    const styles = useFirebaseBtnStyles();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState(reply);\r\n    const [replydata, setReplydata] = useState({});\r\n    const [commentdata, setCommentdata] = useState({});\r\n    const [replyDate, setReplyDate] = useState(\"\");\r\n    const alert = useAlert();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8000/server/viewreply/${data.replyID}/`)\r\n            .then((res) => {\r\n                setReplydata(res.data);\r\n                setReplyDate((res.data.creationDate).split(\"T\")[0])\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8000/server/replyparent/${data.replyID}/`,\r\n            {\r\n                headers: {\r\n                    Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                },\r\n            })\r\n            .then((res) => {\r\n                setCommentdata(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n   \r\n    return (\r\n        <Card className={classes.root} elevation=\"0\">\r\n            <div className={classes.info}>\r\n                <Typography\r\n                        variant=\"h5\"\r\n                        onClick={handleOpen}\r\n                        className={classes.title}\r\n                    >\r\n                        {commentdata.title}\r\n                </Typography>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    onClick={handleOpen}\r\n                    className={classes.textcontent}\r\n                >\r\n                    {replydata.textContent}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                    {\"Posted on :\"  + replyDate}\r\n                </Typography>\r\n\r\n            </div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">Transition modal</h2>\r\n                        <p id=\"transition-modal-description\">\r\n                            Reply\r\n                        </p>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </Card>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { NavMenu, NavItem } from \"@mui-treasury/components/menu/navigation\";\r\nimport { useLineNavigationMenuStyles } from \"@mui-treasury/styles/navigationMenu/line\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport PostList from \"../components/postlist\";\r\nimport CommentList from \"../components/commentlist\";\r\nimport ReplyList from \"../components/replylist\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/react\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nimport {\r\n    Container,\r\n    CssBaseline,\r\n    CardContent,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  align-text: center;\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: \"grid\",\r\n        paddingTop: \"100px\",\r\n        height: \"90vh\",\r\n    },\r\n    icon: {\r\n        height: \"200px\",\r\n        width: \"200px\",\r\n    },\r\n    profile: {\r\n        justifySelf: \"start\",\r\n    },\r\n    info: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n});\r\n\r\nexport default function Profile(props) {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [posts, setPosts] = useState([]);\r\n    const [replies, setReplies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const alert = useAlert();\r\n    const [active, setActive] = useState(\"Post\");\r\n    console.log(\"IS STAFF \" + props.isStaff);\r\n    \r\n\r\n    if (data != null) {\r\n        console.log(data.length == 0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!props.isStaff) {\r\n            axios\r\n                .get(\r\n                    `http://localhost:8000/server/userpostlist/${props.id}/`,\r\n                    {\r\n                        headers: {\r\n                            Authorization:\r\n                                \"JWT \" + localStorage.getItem(\"token\"),\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setData(res.data);\r\n                    setPosts(res.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    alert.show(\"Please Login Again\");\r\n                });\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChangeData = (newType) => {\r\n        setActive(newType);\r\n        if (newType == active) {\r\n            return;\r\n        }\r\n\r\n        if (newType == \"Post\") {\r\n            axios\r\n                .get(\r\n                    `http://localhost:8000/server/userpostlist/${props.id}/`,\r\n                    {\r\n                        headers: {\r\n                            Authorization:\r\n                                \"JWT \" + localStorage.getItem(\"token\"),\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setData(res.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    alert.show(\"Signature Has Expired, Please Login Again\");\r\n                });\r\n        } else if (newType == \"Comment\") {\r\n            axios\r\n                .get(\r\n                    `http://localhost:8000/server/usercommentlist/${props.id}/`,\r\n                    {\r\n                        headers: {\r\n                            Authorization:\r\n                                \"JWT \" + localStorage.getItem(\"token\"),\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setData(res.data);\r\n                    setComments(res.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    alert.show(\"Signature Has Expired, Please Login Again\");\r\n                });\r\n        } else if (newType == 'Reply') {\r\n            axios\r\n            .get(\r\n                `http://localhost:8000/server/userreplylist/${props.id}/`,\r\n                {\r\n                    headers: {\r\n                        Authorization:\r\n                            \"JWT \" + localStorage.getItem(\"token\"),\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setData(res.data);\r\n                setReplies(res.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                alert.show(\"Signature Has Expired, Please Login Again\");\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main>\r\n                <Container maxWidth=\"md\" className={classes.container}>\r\n                    <CardContent className={classes.profile}>\r\n                        <AccountCircleIcon className={classes.icon} />\r\n                        <CardContent className={classes.info}>\r\n                            <Typography variant=\"h4\">\r\n                                {props.username}\r\n                            </Typography>\r\n                            <Typography variant=\"h4\">\r\n                                {\"Status: \" +\r\n                                    (props.isStaff ? \"Staff\" : \"Member\")}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardContent>\r\n                            <Box\r\n                                height={48}\r\n                                display={\"flex\"}\r\n                                justifyContent=\"center\"\r\n                            >\r\n                                <NavMenu\r\n                                    useStyles={useLineNavigationMenuStyles}\r\n                                >\r\n                                    <NavItem\r\n                                        active={\r\n                                            active == \"Post\" ? true : false\r\n                                        }\r\n                                        onClick={() =>\r\n                                            handleChangeData(\"Post\")\r\n                                        }\r\n                                    >\r\n                                        <Typography variant=\"h6\">\r\n                                            Post History\r\n                                        </Typography>\r\n                                    </NavItem>\r\n                                    <NavItem\r\n                                        active={\r\n                                            active == \"Comment\" ? true : false\r\n                                        }\r\n                                        onClick={() =>\r\n                                            handleChangeData(\"Comment\")\r\n                                        }\r\n                                    >\r\n                                        <Typography variant=\"h6\">\r\n                                            Comment History\r\n                                        </Typography>\r\n                                    </NavItem>\r\n                                    <NavItem\r\n                                        active={\r\n                                            active == \"Reply\" ? true : false\r\n                                        }\r\n                                        onClick={() =>\r\n                                            handleChangeData(\"Reply\")\r\n                                        }\r\n                                    >\r\n                                        <Typography variant=\"h6\">\r\n                                            Reply History\r\n                                        </Typography>\r\n                                    </NavItem>\r\n                                </NavMenu>\r\n                            </Box>\r\n                            {loading ? (\r\n                                <div className={classes.loading}>\r\n                                    <FadeLoader\r\n                                        loading={loading}\r\n                                        color=\"#2176ff\"\r\n                                        css={override}\r\n                                        size={150}\r\n                                    />\r\n                                </div>\r\n                            ) : data.length != 0 ? (\r\n                                active == \"Post\" ? (\r\n                                 <CardContent className={classes.posts}>\r\n                                    {data.map((post) => {\r\n                                            return (\r\n                                                <PostList\r\n                                                    post={post}\r\n                                                    key={post.postid}\r\n                                                />\r\n                                            );\r\n                                    }\r\n                                    )}\r\n                                </CardContent> \r\n                                ) : (\r\n                                    active == \"Comment\" ? (\r\n                                        <CardContent className={classes.comments}>\r\n                                        {comments.map((comment) => {\r\n                                                return (\r\n                                                    <CommentList\r\n                                                        comment={comment}\r\n                                                        key={comment.commentID}\r\n                                                    />\r\n                                                );\r\n                                        }\r\n                                        )}\r\n                                    </CardContent> \r\n                                    ) : (\r\n                                        <CardContent className={classes.replies}>\r\n                                        {replies.map((reply) => {\r\n                                                return (\r\n                                                    <ReplyList\r\n                                                        reply={reply}\r\n                                                        key={reply.replyid}\r\n                                                    />\r\n                                                );\r\n                                        }\r\n                                        )}\r\n                                    </CardContent> \r\n                                    )\r\n                                )\r\n    \r\n\r\n                            ) : (\r\n                                <Box\r\n                                height={48}\r\n                                display={\"flex\"}>\r\n                                <CardContent style={{alignItems:\"center\"}}>\r\n                                    <Typography variant=\"h3\">\r\n                                    {\"No \" + active + \" Made\"}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                </Box>\r\n                 \r\n                            )\r\n                            }\r\n                </Container>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt_decode from 'jwt-decode';\r\nimport { NavLink } from 'react-router-dom';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { useAlert } from \"react-alert\";\r\nimport { Reply } from \"@material-ui/icons\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Linkify from 'react-linkify';\r\nimport { CssBaseline,AppBar, Toolbar, Box } from \"@material-ui/core\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Backdrop } from \"@material-ui/core\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport Card from '@material-ui/core/Card';\r\nimport { CardActionArea } from \"@material-ui/core\";\r\nimport { CardHeader } from \"@material-ui/core\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport ThumbUp from \"@material-ui/icons/ThumbUp\";\r\nimport { ThumbDown } from \"@material-ui/icons\";\r\nimport { Edit } from \"@material-ui/icons\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport { Comment } from \"@material-ui/icons\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { brown } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        paddingTop: \"50px\",\r\n        justifyContent:'center',\r\n        flexDirection:\"column\"\r\n    },\r\n    root: {\r\n        maxWidth: 1000,\r\n        flexDirection: \"column\",\r\n        marginBottom: 20,\r\n    },\r\n\r\n    commentroot : {\r\n        maxWidth: 800,\r\n        marginBottom: 30,\r\n    },\r\n\r\n    modal: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    topimg: {\r\n        marginTop: \"100px\",\r\n        height: \"30vh\",\r\n        width: \"auto\",\r\n        marginBottom: \"0\",\r\n    },\r\n    paper: {\r\n        width: 550,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 25,\r\n        fontWeight: 1000,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    footer : {\r\n        listStyle: \"none\"\r\n    },\r\n    line :{\r\n        marginBottom:12,\r\n    },\r\n    form :  {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            maxWidth: '40ch',\r\n        },\r\n    },\r\n\r\n    header : {\r\n        backgroundColor: \"#687477\",\r\n        width: \"100%\",\r\n        alignItems: 'stretch',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n    },\r\n    headerTitle : {\r\n        color: theme.palette.secondary.contrastText,\r\n    },\r\n\r\n    appBar : {\r\n        position:\"relative\",\r\n    }\r\n    }));\r\n\r\n\r\nexport default function Thread({ match, location, id }) {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n    const [user, setUser] = useState({});\r\n    const [username, setUsername]  = useState(\"\");\r\n    const [isStaff, setIsStaff] = useState(false);\r\n    const [user_post, setUserPost] = useState({});\r\n    const [post, setPostdata] = useState({});\r\n    const [postDate, setPostDate] = useState([])\r\n    const [comments, setCommentsdata] = useState([]);\r\n    const [commentID, setCommentID] = useState(\"\");\r\n    const [comment, setComment] = useState({});\r\n    const [replies, setReplies] = useState([]);\r\n    const [reply, setReply] = useState({})\r\n    const [replyID, setReplyID] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [replyContent, setReplyContent] = useState(\"\");\r\n    const [answerer, setAnswerer] = useState({});\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [postEdit, setPostEdit] = useState(\"\");\r\n    const [postTitleEdit, setPostTitleEdit] = useState(\"\");\r\n    const [commentEdit, setCommentEdit] = useState(\"\");\r\n    const [replyEdit, setReplyEdit] = useState(\"\");\r\n    const [modal, setModal] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [upvote, setUpvote] = useState(false);\r\n    const [downvote, setDownVote] = useState(false);\r\n    const [deleteOpen, setDeleteOpen] = useState(false);\r\n    const [deleteReplyOpen, setDeleteReplyOpen] = useState(\"\");\r\n    const [editOpen, setEditOpen] = useState(false);\r\n    const [like, setLike] = useState(0);\r\n    const [dislike, setDislike] = useState(0);\r\n    const [editCommOpen, setEditCommOpen] = useState(false);\r\n    const [editRepOpen, setRepOpen] = useState(false);\r\n    const [repliesUsers, setRepliesUsers] = useState({});\r\n    const [commentsUsers, setCommentsUsers] = useState({});\r\n    const alert = useAlert();\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(\r\n        localStorage.getItem(\"token\") ? true : false\r\n    );\r\n\r\n    const [scroll, setScroll] = React.useState('paper');\r\n  \r\n    const handleEditComOpen = () => {\r\n        setEditCommOpen(true);\r\n    };\r\n\r\n    const handleEditComClose = () => {\r\n        setEditCommOpen(false);\r\n    };\r\n\r\n    const handleEditRepOpen = () => {\r\n        setRepOpen(true);\r\n    }\r\n\r\n    const handleEditRepClose = () => {\r\n        setRepOpen(false);\r\n    }\r\n\r\n    const handleModalOpen = (scrollType) => {\r\n      setModal(true);\r\n      setScroll(scrollType);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setModal(false);\r\n    }\r\n\r\n    const handleEditOpen = () => {\r\n        setEditOpen(true);\r\n      };\r\n  \r\n    const handleEditClose = () => {\r\n        setEditOpen(false);\r\n    }\r\n     \r\n    const handleDeleteReplyOpen = () => {\r\n        setDeleteReplyOpen(true);\r\n    };\r\n  \r\n  \r\n    const handleDeleteReplyClose = () => {\r\n        setDeleteReplyOpen(false);\r\n    }\r\n      \r\n    const descriptionElementRef = React.useRef(null);\r\n\r\n    useEffect(() => {\r\n    if (modal) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [modal]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            fetch(\"http://localhost:8000/server/current_user/\", {\r\n                headers: {\r\n                    Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    setUsername(json.username);\r\n                    setIsStaff(json.is_staff);\r\n                });\r\n        }\r\n    }, [isLoggedIn]);\r\n    \r\n    useEffect(() => {\r\n        axios\r\n            .get(\r\n                `http://localhost:8000/server/postcomment/${match.params.postID}/`\r\n            )\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setCommentsdata(res.data);\r\n                setLoading(false);\r\n                const commentusers = {};\r\n                res.data.map((comment) => {\r\n                    const userid = comment.userID;\r\n                    axios\r\n                    .get(`http://localhost:8000/server/getuserbyID/${userid}/`)\r\n                    .then((res) => {\r\n                        commentusers[userid] = res.data.username;\r\n                        \r\n                    })\r\n                    .catch((error) => console.log(error));\r\n                })\r\n                console.log(commentusers)\r\n                setCommentsUsers(commentusers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\r\n                `http://localhost:8000/server/viewpost/${match.params.postID}/`\r\n            )\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setPostdata(res.data);\r\n                const date = (res.data.creationDate).split(\"T\")[0]\r\n                setPostDate(date);\r\n                setLike(res.data.upvote);\r\n                setDislike(res.data.downvote);\r\n                setLoading(false);\r\n                getUserPost();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    const getPosts = () => {\r\n        axios\r\n            .get(\r\n                `http://localhost:8000/server/viewpost/${match.params.postID}/`\r\n            )\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setPostdata(res.data);\r\n                setLike(res.data.upvote);\r\n                setDislike(res.data.downvote);\r\n                setLoading(false);\r\n                getUserPost();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    \r\n    const getComments = () => {\r\n        axios\r\n            .get(\r\n                `http://localhost:8000/server/postcomment/${match.params.postID}/`\r\n            )\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setCommentsdata(res.data);\r\n                setLoading(false);\r\n                const commentusers = {};\r\n                res.data.map((comment) => {\r\n                    const userid = comment.userID;\r\n                    axios\r\n                    .get(`http://localhost:8000/server/getuserbyID/${userid}/`)\r\n                    .then((res) => {\r\n                        commentusers[userid] = res.data.username;\r\n                    })\r\n                    .catch((error) => console.log(error));\r\n                })\r\n                console.log(\"a\" + commentusers)\r\n                setCommentsUsers(commentusers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const getReplies = (commentid) => {\r\n        axios\r\n        .get(\r\n            `http://localhost:8000/server/commentanswer/${commentid}/`)\r\n            .then((res) => {\r\n                setReplies(res.data);\r\n                setReplyID(id);\r\n                setLoading(false);\r\n                setCommentID(commentid);\r\n                var userreply = new Object();;\r\n                res.data.map((reply) => {\r\n                    const userid = reply.userID;\r\n                    axios\r\n                    .get(`http://localhost:8000/server/getuserbyID/${userid}/`)\r\n                    .then((res) => {\r\n                        userreply[userid] = res.data.username;\r\n                        setRepliesUsers(userreply)\r\n                    })\r\n                    .catch((error) => console.log(error));\r\n                })\r\n            });\r\n        }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDeleteOpen = () => {\r\n        setDeleteOpen(true);\r\n    }\r\n\r\n    const handleDeleteClose = () => {\r\n        setDeleteOpen(false);\r\n    };\r\n\r\n    const handleSubmitComment = () =>\r\n        axios\r\n        .post(\r\n        `http://localhost:8000/server/createcomment/`,\r\n        {\r\n            postID: match.params.postID,\r\n            userID : id,\r\n            textContent : content,\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n    )\r\n    .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        handleOpen();\r\n        setContent(\"\");\r\n        getComments();\r\n    })\r\n    .catch((err) => {\r\n        if (\r\n            err.response.status === 401 ||\r\n            err.response.status === 404\r\n        ) {\r\n            alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n        } else {\r\n            console.log(err.response);\r\n            console.log(err.response.data.res);\r\n            alert.show(err.response.data.res);\r\n        }\r\n    });\r\n\r\n\r\n    const handleSubmitCommentAns = () => {\r\n        axios\r\n        .post(`\r\n        http://localhost:8000/server/createreply/`,\r\n        {\r\n            postID: match.params.postID,\r\n            userID : id,\r\n            textContent : replyContent,\r\n            commentID :commentID,\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n    )\r\n    .then((res) => {\r\n\r\n        console.log(res);\r\n        console.log(res.data);\r\n        setReplyContent(\"\");\r\n        setCommentID(\"\");\r\n        getReplies();\r\n    })\r\n    .catch((err) => {\r\n        if (\r\n            err.response.status === 401 ||\r\n            err.response.status === 404\r\n        ) {\r\n            alert.show(\"Your session has expired. Please Log In again to comment this answer\");\r\n        } else {\r\n            console.log(err.response);\r\n            console.log(err.response.data.res);\r\n            alert.show(err.response.data.res);\r\n        }\r\n    });\r\n    }\r\n    \r\n    const handleUpvote = (userID, postID) => {\r\n    axios\r\n    .post(`http://localhost:8000/server/upvotepost/`, \r\n    {\r\n        userID : id,\r\n        postID : match.params.postID,\r\n        \r\n    },\r\n    {\r\n        headers: {\r\n            Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n        },\r\n    }\r\n    )\r\n    .then(\r\n        res => {\r\n            console.log(res);\r\n            console.log('Update Complete');  \r\n            setPost(res.data);\r\n            setLike(res.data.upvote);\r\n        })\r\n       .catch((err) => { if (\r\n            err.response.status === 401 ||\r\n            err.response.status === 404\r\n        ) {\r\n            alert.show(\"Please Log In to vote this post\");\r\n        } else {\r\n            console.log(err.response);\r\n            console.log(err.response.data.res);\r\n            alert.show(err.response.data.res);\r\n        }\r\n    });\r\n    }\r\n\r\n\r\n    const handleDownvote = () => {\r\n        axios\r\n        .post(`http://localhost:8000/server/downvotepost/`, \r\n        {\r\n            postID : match.params.postID,\r\n            userID : id\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n        )\r\n        .then(\r\n            res => {\r\n                console.log('Update Complete'); \r\n                console.log(res);\r\n                setPost(res.data);\r\n                setDislike(res.data.downvote);\r\n            })\r\n        .catch((err) => { if (\r\n            err.response.status === 401 ||\r\n            err.response.status === 404\r\n        ) {\r\n            alert.show(\"Please Log In to vote this post\");\r\n        } else {\r\n            console.log(err.response);\r\n            console.log(err.response.data.res);\r\n            alert.show(err.response.data.res);\r\n        }\r\n    });\r\n    }\r\n    \r\n    const handleEditComment = e => {\r\n        e.preventDefault();\r\n        axios\r\n            .post('http://localhost:8000/server/editcomment/',{\r\n                textContent: commentEdit,\r\n                commentID : commentID,\r\n                userID : id,\r\n                postID :  match.params.postID,\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                },\r\n            }\r\n            )\r\n            .then(\r\n                res => {\r\n                    window.location.reload(false);\r\n                    setCommentID(\"\");\r\n                })\r\n            .catch(err =>  {\r\n            console.log(err.response);\r\n            console.log(err.response.data.res);\r\n            getComments();\r\n            alert.show(err.response.data.res);\r\n            })\r\n        }\r\n\r\n    \r\n        const handleEditReply = e => {\r\n            e.preventDefault();   \r\n            axios\r\n                .post('http://localhost:8000/server/editreply/',{\r\n                    textContent: replyEdit,\r\n                    commentID : commentID,\r\n                    replyID : replyID,\r\n                    userID : id,\r\n                    postID :  match.params.postID,\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                    },\r\n                }\r\n                )\r\n                .then(\r\n                    res => {\r\n                        window.location.reload(false);\r\n                        setCommentID(\"\");\r\n                        setReplyID(\"\");\r\n                        setReplyEdit(\"\");\r\n                        setReplyContent(\"\");\r\n                        getReplies();\r\n                    })\r\n                .catch(err =>  {\r\n                console.log(err.response);\r\n                console.log(err.response.data.res);\r\n                alert.show(err.response.data.res);\r\n                })\r\n            }\r\n\r\n    const onCommentChange = e => {\r\n            setContent(e.target.value)\r\n            setAnswerer(username)\r\n        };\r\n\r\n    const handleEditPost = e => {\r\n            e.preventDefault();\r\n\r\n            axios\r\n                .post('http://localhost:8000/server/editpost/',\r\n                {\r\n                    userID : id,\r\n                    textContent: postEdit,\r\n                    title : postTitleEdit,\r\n                    postID: match.params.postID,\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                    },\r\n                })\r\n                .then(\r\n                    res => {\r\n                        window.location.reload(false);\r\n                    })\r\n                .catch(err => console.log(err));\r\n        };\r\n    \r\n    \r\n    const setPost = (post,title) => {\r\n            setPostEdit(post);\r\n            setPostTitleEdit(title);\r\n    }\r\n   \r\n    const onPostEditChange = (e) => {\r\n        setPostEdit(e.target.value);\r\n    };\r\n\r\n    const onPostTitleEditChange = (e) => {\r\n        setPostTitleEdit(e.target.value);\r\n    };\r\n\r\n    const onCommentEditChange = e => {\r\n        e.preventDefault();\r\n        setCommentEdit(e.target.value);\r\n    };\r\n\r\n    const onReplyEditChange = e => {\r\n        e.preventDefault();\r\n        setReplyEdit(e.target.value);\r\n    };\r\n\r\n    const onReplyChange = (e) => {\r\n        setReplyContent(e.target.value)\r\n        setAnswerer(username)\r\n    }\r\n\r\n    \r\n    const handleDelete = (e) => { //deleting post\r\n        e.preventDefault();\r\n\r\n        axios\r\n            .delete(`http://localhost:8000/server/deletepost/${match.params.postID}/${id}/`,\r\n            {\r\n                headers: {\r\n                    Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                },\r\n            })//delete post\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    handleDeleteClose(); //close delete post modal\r\n                }\r\n                console.log(res);\r\n                getPosts();\r\n                window.location.reload(false);\r\n            \r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const handleDeleteComment = (e) => { \r\n\r\n        axios\r\n            .delete(`http://localhost:8000/server/deletecomment/${commentID}/${id}/`,\r\n            {\r\n                headers: {\r\n                    Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                },\r\n            }) //delete comment\r\n            .then(res => {\r\n                if(res.status === 200) {\r\n                    handleClose();\r\n                }\r\n                getComments();\r\n                console.log(res);\r\n                window.location.reload(false);\r\n                setCommentID(\"\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    \r\n    const handleDeleteReply = (e) => { \r\n\r\n        axios\r\n            .delete(`http://localhost:8000/server/deletereply/${replyID}/${id}/`,\r\n            {\r\n                headers: {\r\n                    Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                },\r\n            }) //delete reply\r\n            .then(res => {\r\n                if(res.status === 200) {\r\n                    getReplies(commentID)\r\n                    handleDeleteReplyClose();\r\n                }\r\n                console.log(res);\r\n                getReplies();\r\n                setReplyID(\"\");\r\n                getComments();\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    \r\n    const getUserPost = () => { \r\n        \r\n        //get the user who post the question/post\r\n        const postID = match.params.postID; //get post id\r\n        axios\r\n            .get(`http://localhost:8000/server/postuser/${match.params.postID}/`\r\n            ) //search user who post the question\r\n            .then(res => {\r\n                setUserPost(res.data); //set user_post \r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const setReplyAndID = (id, reply) => {\r\n        setReplyID(id);\r\n        setReplyEdit(reply);\r\n    }\r\n\r\n    const setCommentAndID = (commentid, ans) => {\r\n        setCommentID(commentid);\r\n        setCommentEdit(ans);\r\n    }\r\n\r\n    const refreshPage =() => {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <CssBaseline />\r\n\r\n        <Container maxWidth=\"false\" className={classes.container}>\r\n\r\n        <p className=\"whiteSpace\"></p>\r\n        \r\n        <Card className = {classes.root}>\r\n            <CardHeader title={post.title}\r\n            subheader={\r\n            <div className=\"sub-text\">\r\n                     <Typography variant=\"caption\" >\r\n                        @ {`${post.postID}`}\r\n                        &middot; \r\n                       \r\n                        Posted on {postDate}\r\n                    </Typography>\r\n                            <div>Posted by {user_post.username}</div>\r\n            </div>\r\n            }\r\n             classes={{\r\n                root: classes.header,\r\n                title: classes.headerTitle,\r\n                subheader : classes.headerTitle,\r\n              }}\r\n\r\n           \r\n            >\r\n            </CardHeader>\r\n            <hr className=\"line\"></hr>\r\n                    <CardContent>\r\n                    <Typography  variant=\"body2\" component=\"p\" style={{marginBottom:12}}>\r\n                        {post.textContent}\r\n                    </Typography>\r\n                    <ul className={classes.footer}>\r\n                        <li>\r\n                            <Button title=\"Like\"  startIcon={<ThumbUp />} onClick={() => {\r\n                                    setUpvote(true);\r\n                                    handleUpvote(\r\n                                        match.params.postID,\r\n                                        id\r\n                                )}}>\r\n                                {like}\r\n                            </Button>\r\n                            <Button  title=\"Disike\"\r\n                            startIcon={<ThumbDown/>}\r\n                            onClick={() => {\r\n                                setDownVote(true);\r\n                                handleDownvote(\r\n                                    match.params.postID,\r\n                                    id\r\n                                )}}>\r\n                                {dislike}\r\n                            </Button>\r\n                            \r\n                            <Button title=\"View comments\"  data-toggle=\"modal\" \r\n                            data-target=\"#commentsPostModal\" \r\n                            startIcon={<Comment/>}>\r\n                                    {post.numOfComments}\r\n                            </Button>\r\n                        \r\n                        </li>\r\n                        <li>\r\n                            {isLoggedIn &&\r\n                                <form className=\"post pb-4\">\r\n                                    <div className=\"form-row align-items-left mb-3 ml-3\">\r\n                                    <TextField\r\n                                        style = {{minWidth:\"40ch\",maxWidth: \"70ch\"}}\r\n                                        id=\"outlined-multiline-static\"\r\n                                        label=\"Comment..\"\r\n                                        multiline\r\n                                        rows={5}\r\n                                        defaultValue=\"Default Value\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"What are your thoughts? \"\r\n                                        value={content}\r\n                                        onChange={onCommentChange}\r\n                                        disabled={!isLoggedIn}\r\n                                        required />\r\n                                    </div>\r\n                                    <small className=\"form-text text-muted col-sm-11\">\r\n                                        Inappropriate or irrelevant answers will be filtered accordingly.\r\n                                    </small>       \r\n                                    \r\n                                    <br />\r\n                                    <Button type=\"submit\" color=\"secondary\" variant=\"contained\" onClick={handleSubmitComment}\r\n                                    disabled={content== \"\" ? true : false}  style={{ margin:\"10px\" }} \r\n                                    >\r\n                                        Answer\r\n                                    </Button>\r\n                                </form>\r\n                            }\r\n\r\n                            {!isLoggedIn &&\r\n                                <form className=\"post pb-4\">\r\n                                    <div className=\"form-row align-items-left mb-3 ml-3\">\r\n                                    <TextField\r\n                                        style = {{minWidth:\"40ch\",maxWidth: \"70ch\"}}\r\n                                        id=\"outlined-multiline-static\"\r\n                                        label=\"Comment..\"\r\n                                        multiline\r\n                                        rows={5}\r\n                                        defaultValue=\"Default Value\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"What are your thoughts? \"\r\n                                        value={content}\r\n                                        onChange={onCommentChange}\r\n                                        disabled={true}\r\n                                        required />\r\n                                    </div>\r\n                                    <small className=\"form-text text-muted col-sm-11\">\r\n                                        Inappropriate or irrelevant answers will be filtered accordingly.\r\n                                    </small>       \r\n                                    <Alert severity=\"warning\"  color=\"error\">\r\n                                        <AlertTitle>Warning</AlertTitle>\r\n                                            <strong>Please </strong> \r\n                                            <strong>\r\n                                            <NavLink className=\"underline-link alert-danger\" to=\"/login\">\r\n                                            sign in</NavLink> to answer this question</strong> \r\n                                    </Alert>\r\n                                </form>\r\n                            }\r\n\r\n                            {isLoggedIn && (username == user_post.username || isStaff === true) &&\r\n                            <div>\r\n                                <>\r\n                                <Button  variant=\"contained\" color=\"secondary\"  style={{ width: 100, margin:\"10px\" }} \r\n                                startIcon={<Edit/>} onClick={() => {handleEditOpen();setPost(post.textContent,\r\n                                post.title);}}>\r\n                                        Edit\r\n                                </Button>\r\n                                <Dialog fullScreen={fullScreen} open={editOpen} onClose={handleEditClose}>\r\n                                    <AppBar className={classes.appBar}>\r\n                                        <Toolbar>\r\n                                            <Button edge=\"start\" color=\"inherit\" onClick={handleEditClose} aria-label=\"close\" startIcon={<CloseIcon />}/>\r\n                                            <Typography variant=\"h4\" className={classes.title}>\r\n                                                Edit post\r\n                                            </Typography>\r\n                                        </Toolbar>\r\n                                    </AppBar>\r\n                                        <DialogContent>\r\n                                        <form className=\"post pb-4\" className={classes.form}>\r\n                                            <div className=\"form-row align-items-left mb-3 ml-3\">\r\n                                                <div>\r\n                                                <TextField\r\n                                                    style = {{width: \"60ch\"}}\r\n                                                    id=\"outlined-multiline-static\"\r\n                                                    defaultValue=\"Default Value\"\r\n                                                    variant=\"outlined\"\r\n                                                    placeholder=\"Title\"\r\n                                                    value={postTitleEdit}\r\n                                                    onChange={onPostTitleEditChange}\r\n                                                    disabled={!isLoggedIn}\r\n                                                    required />\r\n                                                </div>\r\n                                                <div>\r\n                                                <TextField\r\n                                                    style = {{width: \"60ch\"}}\r\n                                                    id=\"outlined-multiline-static\"\r\n                                                    defaultValue=\"Default Value\"\r\n                                                    variant=\"outlined\"\r\n                                                    placeholder=\"Title\"\r\n                                                    multiline\r\n                                                    rows={4}\r\n                                                    value={postEdit}\r\n                                                    onChange={onPostEditChange}\r\n                                                    disabled={!isLoggedIn}\r\n                                                    required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <DialogActions>\r\n                                                <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                    <Button variant = \"outlined\" \r\n                                                    className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\" style = {{margin:5}}\r\n                                                    onClick={handleEditPost}>\r\n                                                        Save\r\n                                                    </Button>\r\n                                                    <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\"\r\n                                                    onClick={handleEditClose}>\r\n                                                        Cancel\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </DialogActions>\r\n                                        </form>\r\n                                        </DialogContent>\r\n                                    </Dialog> \r\n                                </>\r\n                                <>                                  \r\n                                    <Button  variant=\"contained\" color=\"secondary\"  style={{ width: 100 }} \r\n                                    startIcon={<Delete/>} onClick={() => handleDeleteOpen()}>\r\n                                            Delete\r\n                                    </Button>\r\n                                    <Dialog\r\n                                    open={deleteOpen}\r\n                                    onClose={handleDeleteClose}\r\n                                    fullScreen={fullScreen}\r\n                                    aria-labelledby=\"simple-dialog-title\"\r\n                                    aria-describedby=\"simple-dialog-description\"\r\n                                    >\r\n                                        <AppBar className={classes.appBar}>\r\n                                            <Toolbar>\r\n                                                <Button edge=\"start\" color=\"inherit\" onClick={handleDeleteClose} aria-label=\"close\" startIcon={<CloseIcon />}/>\r\n                                                <h4 id=\"simple-dialog-title\">Delete post</h4>\r\n                                            </Toolbar>\r\n                                        </AppBar>\r\n                                        <DialogContent>\r\n                                            <DialogContentText>\r\n                                                <div className=\"modal-body text-left pt-3 pb-3\">\r\n                                                    Are you sure you want to delete this post? \r\n                                                </div>\r\n                                                <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                        <Button variant = \"outlined\" className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\"\r\n                                                         style = {{margin:5}} onClick={handleDelete}>\r\n                                                            Delete\r\n                                                        </Button>\r\n                                                        <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\" \r\n                                                        onClick={handleDeleteClose}>\r\n                                                            Cancel\r\n                                                        </Button>\r\n                                                </div>\r\n                                            </DialogContentText>\r\n                                        </DialogContent>\r\n                                    </Dialog> \r\n                                    </>\r\n                                    </div>   \r\n                            }     {/* end of delete post/question modal */}        \r\n                        </li>\r\n                    </ul>\r\n            </CardContent>\r\n        </Card>\r\n        {/* Post */}\r\n        <p className=\"whiteSpace\"></p>\r\n\r\n        {/*Comments*/}\r\n            <div>\r\n                <h2 className=\"pt-5 pb-2\"> <b>Answers: </b></h2>\r\n                < Linkify >\r\n                \r\n                    {comments && comments.map((comment) =>\r\n                        <Card y={10}  className={classes.commentroot}>\r\n                        <CardContent>\r\n                        <div>\r\n                            <div className=\"card mb-3 card-thread\">\r\n                                <div className=\"card-body mr-4 pb-0\">\r\n                                    <Typography variant=\"subtitle2\">\r\n                                        <div className=\"sub-text\">\r\n                                            Posted by {commentsUsers[comment.userID]}\r\n                                            <div className=\"pl-0\">\r\n                                                Answered on {(comment.creationDate).split(\"T\")[0]}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Typography>\r\n                                    <Typography className={classes.pos} style={{marginBottom:12}}>\r\n                                            <p className=\"whiteSpace\">{comment.textContent}</p>\r\n                                    </Typography>\r\n                                        {isLoggedIn &&\r\n                                        <div>\r\n                                                 <Button className=\"btn btn-icon pl-3 pr-1 comment\" title=\"View comments\" type=\"button\"\r\n                                                     data-toggle=\"modal\" data-target=\"#commentsModal\"\r\n                                                     onClick={() => {\r\n                                                        getReplies(`${comment.commentID}`); handleModalOpen('paper');}}\r\n                                                     startIcon={<Comment/>}>\r\n                                                         {comment.replyCount}\r\n                                                 </Button>\r\n                                                 \r\n                                                <Dialog\r\n                                                    open={modal}\r\n                                                    fullScreen={fullScreen}\r\n                                                    onClose={handleModalClose}\r\n                                                    scroll={scroll}\r\n                                                    style={{width:\"100%\"}}\r\n                                                    aria-labelledby=\"scroll-dialog-title\"\r\n                                                    aria-describedby=\"scroll-dialog-description\"\r\n                                                    closeAfterTransition\r\n                                                    BackdropComponent={Backdrop}\r\n                                                    BackdropProps={{\r\n                                                      timeout: 500,}}>\r\n                                                        <AppBar className={classes.appBar}>\r\n                                                            <Toolbar>\r\n                                                                <Button edge=\"start\" color=\"inherit\" onClick={handleModalClose} aria-label=\"close\" startIcon={<CloseIcon />}/>\r\n                                                                <h4 id=\"simple-dialog-title\">Replies</h4>\r\n                                                            </Toolbar>\r\n                                                        </AppBar>\r\n                                                            <Fade in={modal} >\r\n                                                                <DialogContent>\r\n                                                                <div >\r\n                                                                    <div id=\"scroll-dialog-title\" className=\"modal fade\" role=\"dialog\">\r\n                                                                        <div className=\"modal-dialog modal-lg\">\r\n                                                                            <div className=\"modal-content\">\r\n                                                                                <div className=\"col-xl-11 col-md-10 col-sm-10 col-xs-10\">\r\n                                                                                        <p className=\"font-italic pb-1 mb-0 pl-2\">Commenting as {username}</p>\r\n                                                                                </div>\r\n                                                                                    <div className=\"modal-body text-left pt-0\">\r\n                                                                                        <div className=\"row content mb-0 greyBg pt-4 pb-3\">\r\n                                                                                <           form className=\"post pb-4\">\r\n                                                                                                <div className=\"form-row align-items-left mb-3 ml-3\">\r\n                                                                                                    <TextField\r\n                                                                                                        style = {{ maxWidth: \"100%\"}}\r\n                                                                                                        id=\"outlined-multiline-static\"\r\n                                                                                                        label=\"Reply\"\r\n                                                                                                        multiline\r\n                                                                                                        rows={5}\r\n                                                                                                        defaultValue=\"Default Value\"\r\n                                                                                                        variant=\"outlined\"\r\n                                                                                                        placeholder=\"Add reply... \"\r\n                                                                                                        value={replyContent}\r\n                                                                                                        onChange={onReplyChange}\r\n                                                                                                        required />\r\n                                                                                                </div>\r\n                                                                                                <small className=\"form-text text-muted col-sm-11\">\r\n                                                                                                    Inappropriate or irrelevant replies will be filtered accordingly.\r\n                                                                                                </small>  \r\n                                                                                                <br />\r\n                                                                                                <Button type=\"submit\" color=\"secondary\" variant=\"contained\" onClick={handleSubmitCommentAns}\r\n                                                                                                disabled={replyContent == \"\" ? true : false} style={{marginBottom:15}}>\r\n                                                                                                    Add Reply\r\n                                                                                                </Button>\r\n                                                                                            </form>\r\n                                                                                        </div>\r\n                                                                            \r\n                                                                            {replies && replies.map((reply) => {\r\n                                                                                const d = reply.creationDate;\r\n                                                                                const e = d.split(\"T\")[0];\r\n                                                                                const id = reply.userID\r\n                                                                                console.log(repliesUsers)\r\n                                                                                console.log(repliesUsers[id])\r\n                                                                                return (\r\n                                                                                    isLoggedIn && (isStaff == true || id == reply.userID) ? (\r\n                                                                                        <DialogContent dividers={scroll === 'paper'}>\r\n                                                                                        <DialogContentText\r\n                                                                                            id=\"scroll-dialog-description\"\r\n                                                                                            ref={descriptionElementRef}\r\n                                                                                            tabIndex={-1}\r\n                                                                                        >\r\n                                                                                            <div>\r\n                                                                                                <div className=\"row content\">\r\n                                                                                                    <div className=\"col-sm-12 ml-2\">\r\n                                                                                                        <p className=\"font-weight-bold pb-0 mb-0\">\r\n                                                                                                            Posted by {repliesUsers[id]}\r\n                                                                                                            </p>\r\n                                                                                                        <p className=\"sub-text pt-0 mt-0\">\r\n                                                                                                            Commented on {e} \r\n                                                                                                            </p>\r\n                                                                                                            <p>{(id)}\r\n                                                                                                            </p>\r\n                                                                                                    </div>\r\n                                                                                                    <p className=\"mr-3 ml-4 whiteSpace\">{reply.textContent}</p>\r\n                                                                                                    <Button className=\"btn btn-icon float-right\"  title=\"Edit Answer\" data-target=\"#deleteAnswerModal\" \r\n                                                                                                        onClick={() =>{setReplyAndID(`${reply.replyID}`, \r\n                                                                                                        `${reply.textContent}`); handleEditRepOpen();setCommentID(reply.commentID)}} startIcon={<Edit/>}>\r\n                                                                                                    </Button>\r\n                                                                                                    <Dialog\r\n                                                                                                        open={editRepOpen}\r\n                                                                                                        fullScreen={fullScreen}\r\n                                                                                                        onClose={handleEditRepClose}\r\n                                                                                                        aria-labelledby=\"simple-dialog-title\"\r\n                                                                                                        aria-describedby=\"simple-dialog-description\"\r\n                                                                                                        >\r\n                                                                                                        <AppBar className={classes.appBar}>\r\n                                                                                                            <Toolbar>\r\n                                                                                                                <Button edge=\"start\" color=\"inherit\" onClick={handleEditRepClose} aria-label=\"close\" startIcon={<CloseIcon />}/>\r\n                                                                                                                <h4 id=\"simple-dialog-title\">Edit Reply</h4>\r\n                                                                                                            </Toolbar>\r\n                                                                                                        </AppBar>\r\n                                                                                                            <DialogContent>\r\n                                                                                                            <form className=\"post pb-4\" className={classes.form}>\r\n                                                                                                                <div className=\"form-row align-items-left mb-3 ml-3\">\r\n                                                                                                                    <div>\r\n                                                                                                                    <TextField\r\n                                                                                                                        id=\"outlined-multiline-static\"\r\n                                                                                                                        defaultValue=\"Default Value\"\r\n                                                                                                                        variant=\"outlined\"\r\n                                                                                                                        placeholder=\"Title\"\r\n                                                                                                                        value={replyEdit}\r\n                                                                                                                        onChange={onReplyEditChange}\r\n                                                                                                                        disabled={!isLoggedIn}\r\n                                                                                                                        required />\r\n                                                                                                                    </div> \r\n                                                                                                                </div>\r\n                                                                                                                <DialogActions>\r\n                                                                                                                    <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                                                                                        <Button variant = \"outlined\" \r\n                                                                                                                        className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\" style = {{margin:5}}\r\n                                                                                                                        onClick={handleEditReply}>\r\n                                                                                                                            Save\r\n                                                                                                                        </Button>\r\n                                                                                                                        <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\"\r\n                                                                                                                        onClick={handleEditRepClose}>\r\n                                                                                                                            Cancel\r\n                                                                                                                        </Button>\r\n                                                                                                                    </div>\r\n                                                                                                                </DialogActions>\r\n                                                                                                            </form>\r\n                                                                                                            </DialogContent>\r\n                                                                                                        </Dialog> \r\n                                                                                                    <Button className=\"btn btn-icon float-right\"  title=\"Delete Answer\" data-target=\"#deleteAnswerModal\" \r\n                                                                                                        onClick={() =>{setReplyID(`${reply.replyID}`); handleDeleteReplyOpen()}} startIcon={<Delete/>}>\r\n                                                                                                    </Button>\r\n                                                                                                    <Dialog\r\n                                                                                                        open={deleteReplyOpen}\r\n                                                                                                        fullScreen={fullScreen}\r\n                                                                                                        onClose={handleDeleteReplyClose} \r\n                                                                                                        aria-labelledby=\"simple-dialog-title\"\r\n                                                                                                        aria-describedby=\"simple-dialog-description\"\r\n                                                                                                    >\r\n                                                                                                    <AppBar className={classes.appBar}>\r\n                                                                                                        <Toolbar>\r\n                                                                                                            <Button edge=\"start\" color=\"inherit\" onClick={handleDeleteReplyClose}  aria-label=\"close\" startIcon={<CloseIcon />}/>\r\n                                                                                                            <h4 id=\"simple-dialog-title\">Delete Reply</h4>\r\n                                                                                                        </Toolbar>\r\n                                                                                                    </AppBar>\r\n                                                                                                    <DialogContent>\r\n                                                                                                        <DialogContentText>\r\n                                                                                                            <div className=\"modal-body text-left pt-3 pb-3\">\r\n                                                                                                                Are you sure you want to delete your reply? \r\n                                                                                                            </div>\r\n                                                                                                            <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                                                                                <Button variant = \"outlined\" \r\n                                                                                                                className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\" style = {{margin:5}}\r\n                                                                                                                    onClick={handleDeleteReply}>\r\n                                                                                                                    Delete\r\n                                                                                                                </Button>\r\n                                                                                                                <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\" \r\n                                                                                                                onClick={handleDeleteReplyClose}>\r\n                                                                                                                    Cancel\r\n                                                                                                                </Button>\r\n                                                                                                            </div>\r\n                                                                                        \r\n                                                                                                        </DialogContentText>\r\n                                                                                                    </DialogContent>\r\n                                                                                                    </Dialog>\r\n                                                                                                </div>   \r\n                                                                                            </div>\r\n                                                                                        </DialogContentText>\r\n                                                                                    </DialogContent>\r\n                                                                                    ) : (\r\n                                                                                        <DialogContent dividers={scroll === 'paper'}>\r\n                                                                                        <DialogContentText\r\n                                                                                            id=\"scroll-dialog-description\"\r\n                                                                                            ref={descriptionElementRef}\r\n                                                                                            tabIndex={-1}\r\n                                                                                        >\r\n                                                                                            <div>\r\n                                                                                                <div className=\"row content\">\r\n                                                                                                    <div className=\"col-sm-12 ml-2\">\r\n                                                                                                        <p className=\"font-weight-bold pb-0 mb-0\">@{repliesUsers[reply.userID]}</p>\r\n                                                                                                        <p className=\"sub-text pt-0 mt-0\">\r\n                                                                                                            Commented on {e}\r\n                                                                                                            </p>\r\n                                                                                                    </div>\r\n                                                                                                    <p className=\"mr-3 ml-4 whiteSpace\">{reply.textContent}</p>\r\n                                                                                                </div>   \r\n                                                                                                \r\n                                                                                            </div>\r\n                                                                                        </DialogContentText>\r\n                                                                                    </DialogContent>\r\n                                                                                    )\r\n                                                                                    )})}\r\n                                                                     {replies.length == \"0\" &&\r\n                                                                         <div className=\"muted-text mt-3 pl-3 pb-3\">\r\n                                                                             No Replies yet!\r\n                                                                         </div>\r\n                                                                     }\r\n                                                                 </div>\r\n                                                             </div>\r\n                                                         </div>\r\n                                                     </div>\r\n                                                </div>\r\n                                                </DialogContent>\r\n                                              </Fade>\r\n                                              </Dialog>\r\n                                    \r\n                                              </div>\r\n                                        }\r\n                                         {!isLoggedIn &&\r\n                                            <div>\r\n                                                <Button className=\"btn btn-icon pl-3 pr-1 comment\" title=\"View comments\" type=\"button\"\r\n                                                     data-toggle=\"modal\" data-target=\"#commentsModal\"\r\n                                                     onClick={() => {\r\n                                                        getReplies(`${comment.commentID}`); handleModalOpen('paper');}}\r\n                                                     startIcon={<Comment/>}>\r\n                                                         {comment.replyCount}\r\n                                                 </Button>\r\n                                                    <Dialog\r\n                                                    className={classes.modal}\r\n                                                    open={modal}\r\n                                                    fullScreen={fullScreen}\r\n                                                    onClose={handleModalClose}\r\n                                                    scroll={scroll}\r\n                                                    aria-labelledby=\"scroll-dialog-title\"\r\n                                                    aria-describedby=\"scroll-dialog-description\"\r\n                                                    closeAfterTransition\r\n                                                    BackdropComponent={Backdrop}\r\n                                                    BackdropProps={{\r\n                                                    timeout: 500,}}>\r\n                                                        <AppBar className={classes.appBar}>\r\n                                                            <Toolbar>\r\n                                                                <Button edge=\"start\" color=\"inherit\" onClick={handleModalClose}  aria-label=\"close\" startIcon={<CloseIcon />}/>\r\n                                                                <h4 id=\"simple-dialog-title\">Delete Reply</h4>\r\n                                                            </Toolbar>\r\n                                                        </AppBar>\r\n                                                        <Fade in={modal}>\r\n                                                            <div>\r\n                                                                <div id=\"scroll-dialog-title\" className=\"modal fade\" role=\"dialog\">\r\n                                                                    <div className=\"modal-dialog modal-lg\">\r\n                                                                        <div className=\"modal-content\">\r\n                                                                            <div className=\"modal-header blueBg\">\r\n                                                                                <h2 id=\"transition-modal-title\">Replies</h2>\r\n                                                                            </div>\r\n                                                                            <div className=\"modal-body text-left pt-0\">\r\n                                                                            <div className=\"row content mb-0 greyBg pt-4 pb-3\">\r\n                                                                                <div className=\"col-xl-11 col-md-10 col-sm-10 col-xs-10\">\r\n                                                                                    <p className=\"font-italic pb-1 mb-0 pl-2\">Commenting as {username}</p>\r\n                                                                                    \r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <hr className=\"mt-0 mb-4\" />\r\n                                                                            {replies && replies.map((reply) =>\r\n                                                                                <DialogContent dividers={scroll === 'paper'}>\r\n                                                                                    <DialogContentText\r\n                                                                                    id=\"scroll-dialog-description\"\r\n                                                                                    ref={descriptionElementRef}\r\n                                                                                    tabIndex={-1}\r\n                                                                                    >\r\n                                                                                    <div>\r\n                                                                                        <div className=\"row content\">\r\n                                                                                            <div className=\"col-sm-12 ml-2\">\r\n                                                                                                <p className=\"font-weight-bold pb-0 mb-0\">{repliesUsers[reply.userID]}</p>\r\n                                                                                            </div>\r\n                                                                                            <p className=\"mr-3 ml-4 whiteSpace\">\r\n                                                                                                {reply.textContent}\r\n                                                                                            </p>\r\n                                                                                        </div>     \r\n                                                                                    </div>\r\n                                                                                    </DialogContentText>\r\n                                                                                </DialogContent>\r\n                                                                            )}\r\n                                                                            {replies.length == \"0\" &&\r\n                                                                                <div className=\"muted-text mt-3 pl-3 pb-3\">\r\n                                                                                    No Replies yet!\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Fade>\r\n                                                    </Dialog>\r\n                                                    </div>\r\n                                                }\r\n                                        {/*Edit and Delete Comment*/}\r\n                                        {isLoggedIn && id == `${comment.userID}` &&\r\n                                        <ul>\r\n                                            <>\r\n                                                <Button className=\"btn btn-icon float-right\" title=\"Edit Comment\" data-toggle=\"modal\" data-target=\"#editAnswerModal\" \r\n                                                onClick={() => {setCommentAndID(`${comment.commentID}`, \r\n                                                `${comment.textContent}`);handleEditComOpen()}} startIcon={<Edit/>}>\r\n                                                </Button>\r\n                                                    <Dialog\r\n                                                        open={editCommOpen}\r\n                                                        fullScreen={fullScreen}\r\n                                                        onClose={handleEditComClose}\r\n                                                        className={classes.modal}\r\n                                                        aria-labelledby=\"simple-dialog-title\"\r\n                                                        aria-describedby=\"simple-dialog-description\"\r\n                                                        >\r\n                                                            <AppBar className={classes.appBar}>\r\n                                                                <Toolbar>\r\n                                                                    <Button edge=\"start\" color=\"inherit\" onClick={handleEditComClose}  aria-label=\"close\" startIcon={<CloseIcon />}/>\r\n                                                                    <h4 id=\"simple-dialog-title\">Edit Comment</h4>\r\n                                                                </Toolbar>\r\n                                                            </AppBar>   \r\n                                                            <DialogContent>\r\n                                                            <form className=\"post pb-4\" className={classes.form}>\r\n                                                                <div className=\"form-row align-items-left mb-3 ml-3\">\r\n                                                                    <div>\r\n                                                                    <TextField\r\n                                                                        style = {{width: \"60ch\"}}\r\n                                                                        id=\"outlined-multiline-static\"\r\n                                                                        defaultValue=\"Default Value\"\r\n                                                                        variant=\"outlined\"\r\n                                                                        placeholder=\"Title\"\r\n                                                                        value={commentEdit}\r\n                                                                        onChange={onCommentEditChange}\r\n                                                                        disabled={!isLoggedIn}\r\n                                                                        required />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <DialogActions>\r\n                                                                    <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                                        <Button variant = \"outlined\" \r\n                                                                        className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\" style = {{margin:5}}\r\n                                                                        onClick={handleEditComment}>\r\n                                                                            Save\r\n                                                                        </Button>\r\n                                                                        <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\"\r\n                                                                        onClick={handleEditComClose}>\r\n                                                                            Cancel\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                </DialogActions>\r\n                                                            </form>\r\n                                                            </DialogContent>\r\n                                                        </Dialog> \r\n                                                    </>\r\n                                                <>\r\n                                                <Button className=\"btn btn-icon float-right\" type=\"button\" data-toggle=\"modal\" title=\"Delete Answer\" data-target=\"#deleteAnswerModal\" \r\n                                                onClick={() =>{setCommentID(`${comment.commentID}`); handleOpen()}} startIcon={<Delete/>}>\r\n                                                </Button>\r\n                                                <Dialog\r\n                                                    open={open}\r\n                                                    onClose={handleClose} \r\n                                                    className={classes.modal}\r\n                                                    fullScreen={fullScreen}\r\n                                                    aria-labelledby=\"simple-dialog-title\"\r\n                                                    aria-describedby=\"simple-dialog-description\"\r\n                                                    >\r\n                                                        <AppBar className={classes.appBar}>\r\n                                                            <Toolbar>\r\n                                                                <Button edge=\"start\" color=\"inherit\" onClick={handleClose}   aria-label=\"close\" startIcon={<CloseIcon />}/>\r\n                                                                <h4 id=\"simple-dialog-title\">Delete Comment</h4>\r\n                                                            </Toolbar>\r\n                                                        </AppBar>                                                       \r\n                                                        <DialogContent>\r\n                                                            <DialogContentText>\r\n                                                                <div className=\"modal-body text-left pt-3 pb-3\">\r\n                                                                    Are you sure you want to delete your comment? \r\n                                                                </div>\r\n                                                                <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                                    <Button variant = \"outlined\" \r\n                                                                    className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\" style = {{margin:5}}\r\n                                                                        onClick={handleDeleteComment}>\r\n                                                                        Delete\r\n                                                                    </Button>\r\n                                                                    <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\" \r\n                                                                    onClick={handleClose}>\r\n                                                                        Cancel\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                            \r\n                                                            </DialogContentText>\r\n                                                        </DialogContent>\r\n                                                    </Dialog>\r\n                                                </>\r\n                                            \r\n                                        </ul>\r\n                                        }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n                    )}\r\n                                        \r\n                    {!comments || comments.length == \"0\" &&\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body mr-4\">\r\n                                <img                         \r\n                                src='/images/void.svg'\r\n                                alt=\"Person reading a book\"\r\n                                className={classes.topimg}\r\n                            />\r\n                                <div className=\"muted-text mt-3\">\r\n                                    No answer yet for this question! Your contribution would be appreciated!\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </Linkify>\r\n            </div>\r\n        {/*END*/}\r\n\r\n        </Container>\r\n        </React.Fragment>\r\n    );\r\n                        }","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { NavMenu, NavItem } from \"@mui-treasury/components/menu/navigation\";\r\nimport { useLineNavigationMenuStyles } from \"@mui-treasury/styles/navigationMenu/line\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n    ListItem,\r\n    List,\r\n    Container,\r\n    CssBaseline,\r\n    CardContent,\r\n    Typography,\r\n    Dialog,\r\n    Slide,\r\n    AppBar,\r\n    Toolbar\r\n} from \"@material-ui/core\";\r\nimport { TextFields } from \"@material-ui/icons\";\r\nimport M from \"minimatch\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  align-text: center;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"grid\",\r\n        height: \"100%\",\r\n        backgroundColor:\"#fffde7\",\r\n        overflow: \"hidden\",\r\n        \r\n    },\r\n    icon: {\r\n        height: \"200px\",\r\n        width: \"200px\",\r\n    },\r\n    profile: {\r\n        justifySelf: \"start\",\r\n        display: \"flex\",\r\n    },\r\n    info: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n        margin: \"2rem\",\r\n    },\r\n    form :  {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n\r\n    information : {\r\n            display: \"flex\",\r\n            justifyContent:\"space-between\",\r\n            alignItems: \"center\",\r\n            margin: \"15px\",\r\n            paddingBottom: \"25px\",\r\n    },\r\n    topimg: {\r\n        marginTop: \"100px\",\r\n        height: \"50vh\",\r\n        flexShrink: 2,\r\n        marginBottom: \"0\",\r\n        display:\"flex\",\r\n        width : \"50%\"\r\n    },\r\n\r\n    blobimg: {\r\n        height: \"50vh\",\r\n        marginBottom: \"0\",\r\n        display:\"flex\",\r\n        width : \"50%\"\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n      },\r\n    \r\n      title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n      },\r\n}));\r\n\r\nconst years = [\r\n    1,2,3,4\r\n]\r\n\r\nfunction Account(props) {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState({});\r\n    const [member, setMember] = useState({});\r\n    const [username, setUsername] = useState(props.username);\r\n    const [faculty, setFaculty] = useState(\"\");\r\n    const [major, setMajor] = useState(\"\");\r\n    const [year, setYear] = useState(\"\");\r\n    const [majors, setMajors] = useState([]);\r\n    const [faculties, setFaculties] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n    console.log(\"IS STAFF \" + props.isStaff);  \r\n    console.log(member.yearOfStudy + \"\"); \r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFacs();\r\n        getMajors();\r\n        getMember();\r\n\r\n    }, []);\r\n\r\n    const getMember = () => {\r\n        axios\r\n        .get(`http://localhost:8000/server/viewuser/${props.id}/`,\r\n        {\r\n            headers: {\r\n                Authorization:\r\n                    \"JWT \" + localStorage.getItem(\"token\"),\r\n            },\r\n        })\r\n        .then((res) => {\r\n            setYear(res.data.yearOfStudy);\r\n            setFaculty(res.data.facultyID);\r\n            setMajor(res.data.majorID)\r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n};\r\n\r\n    const getFacs = () => {\r\n        axios\r\n        .get(`http://localhost:8000/server/facultylist/`)\r\n        .then((res) => {\r\n            setFaculties(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n}\r\n\r\n    const getMajors = () => {\r\n        axios\r\n        .get(\"http://localhost:8000/server/majorlist/\")\r\n        .then((res) => {\r\n            setMajors(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    const handleEditProfile = e => {\r\n        e.preventDefault();\r\n    axios\r\n        .post('http://localhost:8000/server/editprofile/',\r\n        {\r\n            userID : props.id,\r\n            year : year,\r\n            facultyID : faculty,\r\n            majorID : major,\r\n        },\r\n            {\r\n                headers: {\r\n                    Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n                },\r\n            }\r\n            )\r\n            .then(\r\n                res => {\r\n                    if(res.status === 200) {\r\n                        handleClose();\r\n                    }\r\n                    getMember();\r\n                })\r\n            .catch(err => console.log(err));\r\n        };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <CssBaseline />\r\n        <main style={{backgroundColor:\"#fffde7\"}}>\r\n            <Container maxWidth=\"false\" className={classes.container}>\r\n                <CardContent className={classes.profile}>\r\n                    <AccountCircleIcon className={classes.icon} />\r\n                    <CardContent className={classes.info}>\r\n                        <Typography variant=\"h4\">\r\n                            {props.username}\r\n                        </Typography>\r\n                        <Typography variant=\"h4\">\r\n                            {\"Status: \" +\r\n                                (props.isStaff ? \"Staff\" : \"Member\")}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardContent>\r\n                <Box spacing={2} className={classes.information}>\r\n                    <div>\r\n                            <div>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                style={{ maxWidth: 300 }}\r\n                                fullWidth\r\n                                id=\"standard-read-only-input\"\r\n                                helperText=\"Username\"\r\n                                autoComplete=\"username\"\r\n                                value={props.username}\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                disabled\r\n                            />\r\n                            </div>                      \r\n                            <div>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"standard-read-only-input\"\r\n                                helperText=\"Year of Study\"\r\n                                value={year}\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                disabled\r\n                            />\r\n                            </div>                      \r\n                            <div>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"standard-read-only-input\"\r\n                                helperText=\"Major\"\r\n                                value={major}\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                disabled\r\n                            />\r\n                            </div>                      \r\n                            <div>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"standard-read-only-input\"\r\n                                helperText=\"Faculty\"\r\n                                value={faculty}\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                  }}\r\n                                disabled\r\n                            />\r\n                            </div>\r\n                            <Button variant=\"contained\" style={{backgroundColor:\"#2E1114\", color:\"#fff\"}} onClick={handleOpen}>\r\n                                Edit\r\n                            </Button>\r\n                            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition} style={{padding:\"0px\"}}>\r\n                            <AppBar className={classes.appBar}>\r\n                                <Toolbar>\r\n                                    <Button edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\" startIcon={\r\n                                    <CloseIcon />}/>\r\n                                    <Typography variant=\"h6\" className={classes.title}>\r\n                                        Edit Profile\r\n                                    </Typography>\r\n                                    <Button  color=\"inherit\" onClick={handleEditProfile}>\r\n                                        Save\r\n                                    </Button>\r\n                                    \r\n                                </Toolbar>\r\n                            </AppBar>\r\n                                    <List>\r\n                                    <ListItem>\r\n                                    <form className=\"post pb-4\" className={classes.form}>\r\n                                        <div>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"standard-read-only-input\"\r\n                                            label = \"Username\"\r\n                                            autoComplete=\"username\"\r\n                                            value={props.username}\r\n                                            InputProps={{\r\n                                                readOnly: true,\r\n                                                }}\r\n                                            disabled\r\n                                        />\r\n                                        </div>\r\n                                        <div>\r\n                                            <TextField\r\n                                                variant=\"outlined\"\r\n                                                required\r\n                                                fullWidth\r\n                                                select\r\n                                                id=\"year\"\r\n                                                label=\"Year of Study\"\r\n                                                name=\"year\"\r\n                                                autoComplete=\"year\"\r\n                                                value={year}\r\n                                                onChange = {(e) =>\r\n                                                setYear(e.target.value)}\r\n                                            >\r\n                                                {years.map((option) => (\r\n                                                    <MenuItem value={option}>\r\n                                                    Year {option}\r\n                                                </MenuItem>\r\n                                                ))}\r\n                                            </TextField>\r\n                                        </div>\r\n                                        <div>\r\n                                        <TextField\r\n                                                variant=\"outlined\"\r\n                                                required\r\n                                                fullWidth\r\n                                                select\r\n                                                id=\"major\"\r\n                                                label=\"Major\"\r\n                                                name=\"major\"\r\n                                                autoComplete=\"major\"\r\n                                                value={major}\r\n                                                onChange = {(e) =>\r\n                                                setMajor(e.target.value)}\r\n                                            >\r\n                                                {majors.map((option) => (\r\n                                                    <MenuItem value={option.majorID}>\r\n                                                    {option.majorName}\r\n                                                </MenuItem>\r\n                                                ))}\r\n                                            </TextField>\r\n                                        </div>\r\n                                        <div>\r\n                                            {faculties.length != 0 &&\r\n                                        <TextField\r\n                                                variant=\"outlined\"\r\n                                                required\r\n                                                fullWidth\r\n                                                select\r\n                                                id=\"faculty\"\r\n                                                label=\"Faculty\"\r\n                                                name=\"faculty\"\r\n                                                autoComplete=\"faculty\"\r\n                                                value={faculty}\r\n                                                onChange = {(e) =>\r\n                                                setFaculty(e.target.value)}\r\n                                            >\r\n                                                {faculties.map((option) => (\r\n                                                    <MenuItem value={option.facultyID}>\r\n                                                    {option.facultyName}\r\n                                                </MenuItem>\r\n                                                ))}\r\n                                            </TextField>}\r\n                                        </div>\r\n                                        <div>\r\n                                        </div>\r\n                                        </form>\r\n                                    </ListItem>\r\n                                    </List>\r\n                            </Dialog>\r\n                    </div>\r\n                    <img\r\n                        src='/images/profile.svg'\r\n                        alt=\"Profile\"\r\n                        className={classes.topimg}\r\n                    />\r\n                </Box>    \r\n            </Container>\r\n        </main>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Account\r\n","import React, { useState, useEffect, Component} from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport FullCalendar, { constrainPoint } from '@fullcalendar/react'; // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed\r\nimport listPlugin from '@fullcalendar/list';\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport axios from 'axios';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Button, Container, CssBaseline, Typography, Grid } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { TextField } from '@material-ui/core';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { Fullscreen, TextFields } from '@material-ui/icons';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { AppBar } from '@material-ui/core';\r\nimport { Toolbar, Divider } from '@material-ui/core';\r\nimport { Slide } from '@material-ui/core';\r\nimport { css } from \"@emotion/react\";\r\nimport { List } from '@material-ui/core';\r\nimport { ListItem } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { set } from 'react-hook-form';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst override = css`\r\n  display: flex;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  align-text: center;\r\n`;\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer : {\r\n    display: \"flex\",\r\n    justifyContent:'center',\r\n    flexDirection:'row',\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    paddingTop: \"50px\",\r\n    justifyContent:'center',\r\n    flexDirection:'column',\r\n    padding: \"20px\",\r\n  },\r\n  root: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n  },\r\n\r\n  dialogTitle : {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n\r\n  calendar: {\r\n    padding:\"20px\",\r\n    display:\"flex\",\r\n    height:\"auto\",\r\n  },\r\n\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n\r\n  form :  {\r\n    '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        maxWidth: '40ch',\r\n    },\r\n},\r\n}));\r\n\r\nexport default function Timetable(props) {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n    const [id, setID] = useState(props.id);\r\n    const classes = useStyles();\r\n    const [events, setEvents] = useState([]);\r\n    const [lessons, setLessons] = useState([]);\r\n    const [schedLessons, setSchedLessons] = useState([]);\r\n    const [event, setEvent] = useState({});\r\n    const [eventDetail, setEventDetail] = useState({});\r\n    const alert = useAlert();\r\n    const [open, setOpen] = useState(false);\r\n    const [detail, setDetail] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [type, setType] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [start, setStart] = useState(\"\");\r\n    const [end, setEnd] = useState(\"\");\r\n    const [titleEdit, setTitleEdit] = useState(\"\");\r\n    const [descEdit, setDescEdit] = useState(\"\");\r\n    const [startEdit, setStartEdit] = useState(\"\");\r\n    const [endEdit, setEndEdit] = useState(\"\");\r\n    const [eventID, setEventID] = useState(\"\");\r\n    const [lessonDetail, setLessonDetail] = useState(\"\");\r\n    const [modules, setModules] = useState([]);\r\n    const [lessonID, setLessonID] = useState(\"\");\r\n    const [moduleID, setModuleID] = useState(\"\");\r\n    const [editEventOpen, setEditEventOpen] = useState(false);\r\n    const [deleteOpen, setDelete] = useState(false);\r\n\r\n  const getModules = () => {\r\n      axios\r\n      .get(\"http://localhost:8000/server/modulelist/\")\r\n      .then((res) => {\r\n          setModules(res.data);\r\n          setLoading(false);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleDeleteOpen = () => {\r\n    setDelete(true);\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setDelete(false);\r\n  };\r\n\r\n  const handleOpen= () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setType(\"\")\r\n  };\r\n\r\n  const handleEditEventOpen = () => {\r\n    setEditEventOpen(true);\r\n    setTitleEdit(event.title);\r\n    const s = event.startStr;\r\n    const startReal = s.split(\"+\")[0];\r\n    setStartEdit(startReal);\r\n    const d = event.endStr;\r\n    const endReal = d.split(\"+\")[0];\r\n    setEndEdit(endReal);\r\n    setDescEdit(eventDetail.description)\r\n  }\r\n\r\n  const handleEditEventClose = () => {\r\n    setEditEventOpen(false);\r\n    setTitleEdit(\"\");\r\n    setStartEdit(\"\");\r\n    setEndEdit(\"\");\r\n    setDescEdit(\"\");\r\n  }\r\n\r\n  const handleDetailOpen= (arg) => {\r\n    setDetail(true);\r\n    setEvent(arg.event);\r\n    setEventDetail(arg.event.extendedProps);\r\n    setEventID(arg.event.extendedProps.eventID);\r\n    console.log(arg.event.extendedProps)\r\n  };\r\n\r\n  const handleDetailClose = () => {\r\n    setDetail(false);\r\n  };\r\n\r\n  const onTypeChange = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const onTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const onDescChange = (e) => {\r\n    setDesc(e.target.value)\r\n  }\r\n  \r\n  const onStartChange = (e) => {\r\n    setStart(e.target.value);\r\n  };\r\n  \r\n  const onEndChange = (e) => {\r\n    setEnd(e.target.value);\r\n  };\r\n\r\n  const onTitleEditChange = (e) => {\r\n    e.preventDefault();\r\n    setTitleEdit(e.target.value);\r\n  };\r\n\r\n  const onDescEditChange = (e) => {\r\n    e.preventDefault();\r\n    setDescEdit(e.target.value)\r\n  }\r\n  \r\n  const onStartEditChange = (e) => {\r\n    e.preventDefault();\r\n    setStartEdit(e.target.value);\r\n  };\r\n  \r\n  const onEndEditChange = (e) => {\r\n    e.preventDefault();\r\n    setEndEdit(e.target.value);\r\n  };\r\n\r\n  const onLessonIDChange = (e) => {\r\n    e.preventDefault();\r\n    setLessonID(e.target.value);\r\n  };\r\n\r\n  const getModuleLesson = (moduleid) => {\r\n    axios\r\n      .get(\r\n      `http://localhost:8000/server/getmodulelessons/${moduleid}`,\r\n      {\r\n          headers: {\r\n              Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n          },\r\n      }\r\n  )\r\n  .then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      setLessons(res.data);\r\n  })\r\n  .catch((err) => {\r\n    if (\r\n      err.response.status === 401 ||\r\n      err.response.status === 404\r\n  ) {\r\n      alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n  } else {\r\n    console.log(err.response);\r\n    console.log(err.response.data.res);\r\n    alert.show(err.response.data.res);\r\n  }\r\n});\r\n}\r\n  \r\n\r\n\r\n  const handleSubmitEvent = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n      `http://localhost:8000/server/createevent/`,\r\n      {\r\n          userID : props.id,\r\n          title : title,\r\n          description : desc,\r\n          start : start,\r\n          end : end,\r\n      },\r\n      {\r\n          headers: {\r\n              Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n          },\r\n      }\r\n  )\r\n  .then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      handleOpen();\r\n      setType(\"\");\r\n      setTitle(\"\");\r\n      setDesc(\"\");\r\n      setStart(\"\");\r\n      setEnd(\"\");\r\n      getEvents();\r\n  })\r\n  .catch((err) => {\r\n    if (\r\n      err.response.status === 401 ||\r\n      err.response.status === 404\r\n  ) {\r\n      alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n  } else {\r\n    console.log(err.response);\r\n    console.log(err.response.data.res);\r\n    alert.show(err.response.data.res);\r\n  }\r\n});\r\n}\r\n  \r\n  const handleEditEvent = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n      `http://localhost:8000/server/editevent/`,\r\n      {\r\n          userID : props.id,\r\n          title : titleEdit,\r\n          description : descEdit,\r\n          start : startEdit,\r\n          end : endEdit,\r\n          eventID : eventID,\r\n      },\r\n      {\r\n          headers: {\r\n              Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n          },\r\n      }\r\n  )\r\n  .then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      console.log(res.status)\r\n      setTitleEdit(\"\");\r\n      setDescEdit(\"\");\r\n      setStartEdit(\"\");\r\n      setEndEdit(\"\");\r\n      getEvents();\r\n      if (res.status == 200) {\r\n        handleEditEventClose();\r\n      }\r\n  })\r\n  .catch((err) => {\r\n      if (\r\n          err.response.status === 401 ||\r\n          err.response.status === 404\r\n      ) {\r\n          alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n      } else {\r\n          console.log(err.response);\r\n          console.log(err.response.data.res);\r\n          alert.show(err.response.data.res);\r\n      }\r\n  });\r\n  }\r\n\r\n  const handleDeleteEvent = (e, eventid) => {\r\n    e.preventDefault();\r\n    axios\r\n    .delete(`http://localhost:8000/server/deleteevent/${eventid}/${props.id}/`,\r\n    {\r\n        headers: {\r\n            Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n        },\r\n    })//delete post\r\n    .then(res => {\r\n        console.log(res);\r\n        getEvents();  \r\n        if (res.status == 200) {\r\n          handleDetailClose();\r\n        }\r\n    })\r\n    .catch(err => {\r\n      if (\r\n        err.response.status === 401 ||\r\n        err.response.status === 404\r\n    ) {\r\n        alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n    } else {\r\n        console.log(err.response);\r\n        console.log(err.response.data.res);\r\n        alert.show(err.response.data.res);\r\n    }\r\n  });\r\n  };\r\n\r\nconst getScheduleLessons = () => {\r\n    axios.get(`http://localhost:8000/server/userclasslist/${props.id}/`,\r\n    {\r\n      headers: {\r\n          Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    })\r\n  .then(res =>{\r\n    console.log(res.data);\r\n    setSchedLessons(res.data);\r\n    setLoading(false);\r\n  })\r\n  .catch((err) => {\r\n    if (\r\n      err.status === 401 \r\n  ) {\r\n      alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n  } else if (err.status === 404) {\r\n    alert.show(\"Sorry, we have trouble in retrieveing your timetable\");\r\n  }\r\n    else {\r\n    console.log(err)\r\n  }\r\n})\r\n}\r\n\r\nconst getEvents = () => {\r\n  axios.all([\r\n    axios.get(`http://localhost:8000/server/usereventlist/${props.id}/`,\r\n    {\r\n      headers: {\r\n          Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    }),\r\n    axios.get(`http://localhost:8000/server/userclasslist/${props.id}/`,\r\n    {\r\n      headers: {\r\n          Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    })\r\n  ])\r\n  .then(resArr =>{\r\n    const data = [];\r\n    resArr.map(res=> data.push(...res.data));\r\n    console.log(data);\r\n    setEvents(data);\r\n    setLoading(false);\r\n  })\r\n  .catch((err) => {\r\n    if (err.response.status ===  401 || err.response.status === 404) {\r\n      alert.show(\"Your session has expired. Please login again to see your schedule\")\r\n    } else {\r\n      console.log(err);\r\n    }\r\n  })\r\n}\r\n  \r\n  const handleSubmitScheduleLesson = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n      `http://localhost:8000/server/createschedulelesson/`,\r\n      {\r\n          userID : props.id,\r\n          lessonID : lessonID,\r\n      },\r\n      {\r\n          headers: {\r\n              Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n          },\r\n      }\r\n  )\r\n  .then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      handleClose();\r\n      setModuleID(\"\");\r\n      setLessonID(\"\");\r\n      getEvents();\r\n  })\r\n  .catch((err) => {\r\n    if (\r\n      err.response.status === 401 ||\r\n      err.response.status === 404\r\n  ) {\r\n      alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n  } else {\r\n    console.log(err.response);\r\n    console.log(err.response.data.res);\r\n    alert.show(err.response.data.res);\r\n  }\r\n});\r\n}\r\n\r\nuseEffect(() => {\r\n  getModules();\r\n  axios.all([\r\n    axios.get(`http://localhost:8000/server/usereventlist/${props.id}/`,\r\n    {\r\n      headers: {\r\n          Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    }),\r\n    axios.get(`http://localhost:8000/server/userclasslist/${props.id}/`,\r\n    {\r\n      headers: {\r\n          Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    })\r\n  ])\r\n  .then(resArr =>{\r\n    const data = [];\r\n    resArr.map(res=> data.push(...res.data));\r\n    console.log(data);\r\n    setEvents(data);\r\n    setLoading(false);\r\n  })\r\n  .catch((err) => {\r\n    if (\r\n      err.status === 401 \r\n  ) {\r\n      alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n  } else if (err.status === 404) {\r\n    alert.show(\"Sorry, we have trouble in retrieveing your timetable\");\r\n  }\r\n    else {\r\n    console.log(err)\r\n  }\r\n})\r\n}, []);\r\n\r\n  const handleDeleteSchedLesson = (e, lessonid) => {\r\n    e.preventDefault();\r\n    axios\r\n    .delete(`http://localhost:8000/server/deleteschedulelesson/${lessonid}/${props.id}/`,\r\n    {\r\n        headers: {\r\n            Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n        },\r\n    })//delete post\r\n    .then(res => {\r\n        console.log(res);\r\n        getEvents();  \r\n        if (res.status == 200) {\r\n          handleDetailClose();\r\n        }\r\n    })\r\n    .catch(err => {\r\n      if (\r\n        err.response.status === 401 ||\r\n        err.response.status === 404\r\n    ) {\r\n        alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n    } else {\r\n        console.log(err.response);\r\n        console.log(err.response.data.res);\r\n        alert.show(err.response.data.res);\r\n    }\r\n  });\r\n  };\r\n\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline/>\r\n        <Container maxWidth=\"false\" className={classes.mainContainer}>\r\n      <Container maxWidth=\"false\" className={classes.container}>\r\n        <Button onClick={handleOpen}>\r\n          Add Event\r\n        </Button>\r\n        <h1>{events.slice(1).eventID}</h1>\r\n        <Dialog open={open}\r\n            onClose={handleClose}\r\n            fullScreen={fullScreen}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            style={{padding:'15px'}}\r\n            >\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                  <Button edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\" startIcon={\r\n                    <CloseIcon />}/>\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    Add Event\r\n                  </Typography>\r\n                </Toolbar>\r\n              </AppBar>\r\n            <DialogContent>\r\n            <TextField\r\n                  style = {{minWidth: \"20ch\", maxWidth:\"50ch\", marginTop:'20px'}}\r\n                  id=\"outlined-multiline-static\"\r\n                  select\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Event Type\"\r\n                  value={type}\r\n                  onChange={onTypeChange}\r\n                  helperText=\"Event\"\r\n                  required >\r\n                  <MenuItem value=\"\" disabled>\r\n                      Type\r\n                  </MenuItem>\r\n                  <MenuItem value={\"Lesson\"}>Lesson</MenuItem>\r\n                  <MenuItem value={\"Personal Event\"}>\r\n                      Personal Event\r\n                  </MenuItem>\r\n              </TextField>\r\n                      {type == \"Lesson\" &&\r\n                      <form className={classes.form} onSubmit={handleSubmitScheduleLesson}>\r\n                        <div>\r\n                          <div>\r\n                          <Autocomplete\r\n                            id=\"controllable-states-demo\"\r\n                            options={modules}\r\n                            onChange = {(event,newValue) => {\r\n                                setModuleID(newValue.moduleCode);\r\n                                getModuleLesson(newValue.moduleCode);\r\n                            }}\r\n                            placeholder=\"Module\"\r\n                            getOptionLabel={option => option.moduleCode}\r\n                            style={{cmaxWidth: 600 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Module\" variant=\"outlined\" />}\r\n                        />\r\n                        </div>\r\n                        <div>\r\n                        <Autocomplete\r\n                          id=\"controllable-states-demo\"\r\n                          options={lessons}\r\n                          onChange = {(event,newValue) => {\r\n                            console.log(newValue)\r\n                            setLessonID(newValue.lessonID);\r\n                          }}\r\n                          onInputChange={(event, newInputValue) => {\r\n                            setLessonDetail(newInputValue);\r\n                          }}\r\n                          getOptionLabel={option => (option.lessonType + \" \" + option.classNo + \" \" + option.day + \",\" + (option.startTime).slice(0,5) + \r\n                          \"-\" + (option.endTime).slice(0,5))}\r\n                          style={{ maxWidth: 600 }}\r\n                          renderInput={(params) => <TextField {...params} label=\"Class\" variant=\"outlined\" />}\r\n                      />\r\n                        </div>\r\n                      </div>\r\n                      <DialogActions>\r\n                      <Button type=\"submit\" disabled={((type == \"Lesson\" ? (moduleID == \"\" && lessonID == \"\") :\r\n                      (title == \"\" \r\n                      || (start == \"\" || (desc == \"\" || end == \"\"))))) ? true : false}>\r\n                        Add\r\n                      </Button>\r\n                      <Button onClick={handleClose}>\r\n                        Close\r\n                      </Button>\r\n                  </DialogActions>\r\n                      </form>\r\n                      }\r\n                        {type == \"Personal Event\" &&\r\n                        <form className={classes.form} onSubmit={handleSubmitEvent}>\r\n                        <div>\r\n                          <div>\r\n                        <TextField\r\n                        style = {{width: \"30ch\"}}\r\n                        id=\"outlined-multiline-static\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Title\"\r\n                        value={title}\r\n                        onChange={onTitleChange}\r\n                        helperText=\"Title\"\r\n                        required/>\r\n                        </div>\r\n                        <div>\r\n                        <TextField\r\n                        style = {{width: \"30ch\"}}\r\n                        id=\"outlined-multiline-static\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Description\"\r\n                        value={desc}\r\n                        onChange={onDescChange}\r\n                        helperText=\"Description\"\r\n                        required/>\r\n                        </div>\r\n                        <div>\r\n                        <TextField\r\n                          id=\"datetime-local\"\r\n                          helperText=\"Start Time\"\r\n                          variant=\"outlined\"\r\n                          type=\"datetime-local\"\r\n                          value={start}\r\n                          onChange={onStartChange}\r\n                          defaultValue=\"2017-05-24T10:30:00\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          required\r\n                        />\r\n                        </div>\r\n                        <div>\r\n                        <TextField\r\n                          id=\"datetime-local\"\r\n                          helperText=\"End Time\"\r\n                          variant=\"outlined\"\r\n                          type=\"datetime-local\"\r\n                          value={end}\r\n                          onChange={onEndChange}\r\n                          defaultValue=\"2017-05-24T10:30:00\"\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          required\r\n                        />\r\n                        </div>\r\n                      </div>\r\n                      <DialogActions>\r\n                      <Button type=\"submit\" disabled={((type == \"Lesson\" ? (moduleID == \"\" && lessonID == \"\") :\r\n                      (title == \"\" \r\n                      || (start == \"\" || (desc == \"\" || end == \"\"))))) ? true : false}>\r\n                        Add\r\n                      </Button>\r\n                      <Button onClick={handleClose}>\r\n                        Close\r\n                      </Button>\r\n                  </DialogActions>\r\n                      </form>\r\n                      }\r\n            </DialogContent>\r\n        </Dialog>\r\n        <main>    \r\n          {loading ? (\r\n              <div className={classes.loading}>\r\n                  <FadeLoader\r\n                      loading={loading}\r\n                      color=\"#a1887f\"\r\n                      css={override}\r\n                      size={150}\r\n                  />\r\n              </div>\r\n              ) : (\r\n                <div>\r\n        <FullCalendar\r\n        default= 'standard'\r\n        plugins={[ dayGridPlugin, \r\n          timeGridPlugin ,interactionPlugin, \r\n          listPlugin ]}\r\n        initialView=\"dayGridMonth\"\r\n        dayMaxEventRows={true}\r\n        views={{\r\n          dayGridMonth: {\r\n            dayMaxEventRows: 4\r\n          },\r\n        }}\r\n        headerToolbar={{\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n        }}\r\n        eventClick={(arg) => handleDetailOpen(arg)}\r\n        events= {events}\r\n      />\r\n      <Dialog fullScreen open={detail} onClose={handleDetailClose} TransitionComponent={Transition} style={{padding:\"0px\"}}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <Button edge=\"start\" color=\"inherit\" onClick={handleDetailClose} aria-label=\"close\" startIcon={\r\n              <CloseIcon />}/>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {event.title}\r\n            </Typography>\r\n            {!(eventDetail.description == \"Tutorial\" ||\r\n            eventDetail.description == \"Recitation\" || eventDetail.description == \"Lecture\" ||\r\n            eventDetail.description == \"Laboratory\" || eventDetail.description == \"Sectional Teaching\") && (\r\n            <Button autoFocus color=\"inherit\" onClick={() => {handleEditEventOpen();handleDetailClose()}}>\r\n              Edit\r\n            </Button>)\r\n            }\r\n            <Button  color=\"inherit\" onClick={handleDeleteOpen}>\r\n              Delete\r\n            </Button>\r\n            <Dialog\r\n              open={deleteOpen}\r\n              fullScreen={fullScreen}\r\n              onClose={handleDeleteClose}\r\n              aria-labelledby=\"simple-dialog-title\"\r\n              aria-describedby=\"simple-dialog-description\"\r\n              >\r\n                <AppBar className={classes.appBar}>\r\n                  <Toolbar>\r\n                    <Button edge=\"start\" color=\"inherit\" onClick={handleDeleteClose} aria-label=\"close\" startIcon={\r\n                      <CloseIcon />}/>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                      Delete Event\r\n                    </Typography>\r\n                  </Toolbar>\r\n                </AppBar>\r\n                  <DialogContent style={{marginTop:\"15px\"}}>\r\n                      <DialogContentText>\r\n                          <div className=\"modal-body text-left pt-3 pb-3\">\r\n                              Are you sure you want to delete this event? \r\n                          </div>\r\n                          <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                  <Button variant = \"outlined\" className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\"\r\n                                    style = {{margin:5}} onClick={(eventDetail.description == \"Tutorial\" ||\r\n                                    eventDetail.description == \"Recitation\" || eventDetail.description == \"Lecture\" ||\r\n                                    eventDetail.description == \"Laboratory\" || eventDetail.description == \"Sectional Teaching\") ?\r\n                                      ((e) => handleDeleteSchedLesson(e, eventDetail.lessonID)) : (\r\n                                        (e) => handleDeleteEvent(e,eventID)\r\n                                      )}>\r\n                                      Delete\r\n                                  </Button>\r\n                                  <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\" \r\n                                  onClick={handleDeleteClose}>\r\n                                      Cancel\r\n                                  </Button>\r\n                          </div>\r\n                      </DialogContentText>\r\n                  </DialogContent>\r\n              </Dialog> \r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem>\r\n              <ListItemText secondary={\r\n                <Typography varian=\"subtitle1\">\r\n                  {event.startStr ? (<Typography variant=\"body2\">\r\n                                {(event.startStr).split(\"T\")[0]}  &middot; \r\n                                {((event.startStr).split(\"T\")[1]).slice(0,5)} \r\n                            </Typography>) : (\r\n                    \"\"\r\n                  )}\r\n              </Typography>}\r\n              primary=\"Start Time\"\r\n              />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n              <ListItemText secondary={\r\n                <Typography varian=\"subtitle1\">\r\n                  {event.endStr ? (<Typography variant=\"body2\">\r\n                                {(event.endStr).split(\"T\")[0]}  &middot; \r\n                                {((event.endStr).split(\"T\")[1]).slice(0,5)} \r\n                            </Typography>) : (\r\n                    \"\"\r\n                  )}\r\n              </Typography>}\r\n              primary=\"End Time\"\r\n              />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemText primary={eventDetail.description}/>\r\n          </ListItem>\r\n          <Divider />\r\n        </List>\r\n      </Dialog>\r\n     \r\n     <Dialog className={classes.root}\r\n     open={editEventOpen}\r\n     onClose={handleEditEventClose}>\r\n       <DialogContent>\r\n      <form className=\"post pb-4\" className={classes.form}>\r\n        <div className=\"form-row align-items-left mb-3 ml-3\">\r\n            <div>\r\n\r\n            <TextField\r\n                style = {{width: \"60ch\"}}\r\n                id=\"outlined-multiline-static\"\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                \r\n                helperText=\"Title\"\r\n                value={titleEdit}\r\n                onChange={onTitleEditChange}\r\n                disabled={!props.username}\r\n                required />\r\n            </div>\r\n            <div>\r\n            <TextField\r\n                style = {{width: \"60ch\"}}\r\n                id=\"outlined-multiline-static\"\r\n                defaultValue=\"Default Value\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Description\"\r\n                helperText=\"Description\"\r\n                multiline\r\n                rows={2}\r\n                value={descEdit}\r\n                onChange={onDescEditChange}\r\n                disabled={!props.username}\r\n                required />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                disabled={!props.username}\r\n                id=\"datetime-local\"\r\n                helperText=\"Start Time\"\r\n                defaultValue={event.start}\r\n                variant=\"outlined\"\r\n                type=\"datetime-local\"\r\n                value={startEdit}\r\n                onChange={onStartEditChange}\r\n                defaultValue={startEdit}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                required\r\n                />\r\n              </div>\r\n              <div>\r\n              <TextField\r\n                id=\"datetime-local\"\r\n                helperText=\"End Time\"\r\n                variant=\"outlined\"\r\n                type=\"datetime-local\"\r\n                value={endEdit}\r\n                onChange={onEndEditChange}\r\n                defaultValue={endEdit}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                required\r\n                disabled={!props.username}\r\n              />\r\n              </div>\r\n        </div>\r\n        <DialogActions>\r\n            <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                <Button variant = \"outlined\" \r\n                className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\" style = {{margin:5}}\r\n                onClick={handleEditEvent}>\r\n                    Save\r\n                </Button>\r\n                <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\"\r\n                onClick={handleEditEventClose}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n            </DialogActions>\r\n            </form>\r\n            </DialogContent>\r\n      </Dialog>\r\n      </div>\r\n      )}\r\n      </main>\r\n      </Container >\r\n      </Container>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n","import React , {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MuiListItem from \"@material-ui/core/ListItem\";\r\nimport TodayTwoToneIcon from '@material-ui/icons/TodayTwoTone';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport MenuIcon  from '@material-ui/icons/Menu';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { Badge } from '@material-ui/core';\r\nimport { DialogContent, DialogActions, DialogTitle, DialogContentText} from '@material-ui/core';\r\nimport { Box, Tooltip,Button, Card, CardContent, CardActions, Fab, Dialog,TextField } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport css from '@emotion/css';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { useAlert } from 'react-alert';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { FlashOffRounded, Notifications, SettingsBackupRestoreOutlined } from '@material-ui/icons';\r\nconst drawerWidth = 240;\r\nconst override = css`\r\n  display: flex;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  align-text: center;\r\n`;\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width:\"100%\",\r\n    justifyContent:'space-between'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    zIndex:999,\r\n  },\r\n  drawerPaper: {\r\n    maxWidth: drawerWidth,\r\n    minWidth:\"200px\",\r\n    paddingTop : \"20px\",\r\n  },\r\n  drawerContainer: {\r\n    width:250,\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2),\r\n    overflow: \"hidden\",\r\n    flexDirection:\"column\",\r\n  },\r\n\r\n  tooltip : {\r\n      float:\"right\",\r\n      margin:\"20px\"\r\n  },\r\n  info : {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding:\"10px\",\r\n    paddingBottom:\"0px\"\r\n  },\r\n  rootCard: {\r\n    width: \"600px\",\r\n    flexDirection: \"column\",\r\n    marginBottom:\"20px\",\r\n    display:\"flex\",\r\n    overflow:\"hidden\",\r\n    justifyContent:\"center\",\r\n    flexGrow:1,\r\n    flexBasis:0\r\n    },\r\n\r\n    topimg: {\r\n    height: \"30vh\",\r\n    width: \"auto\",\r\n    marginBottom: \"0\",\r\n},\r\n\r\n    modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    },\r\n}));\r\n\r\nconst ListItem = withStyles({\r\n    root: {\r\n      \"&$selected\": {\r\n        backgroundColor:\"#b71c1c\",\r\n        color: \"#b71c1c\",\r\n        \"& .MuiListItemIcon-root\": {\r\n          color: \"#b71c1c\"\r\n        }\r\n      },\r\n      \"&$selected:hover\": {\r\n        backgroundColor: \"purple\",\r\n        color: \"#b71c1c\",\r\n        \"& .MuiListItemIcon-root\": {\r\n          color: \"#b71c1c\"\r\n        }\r\n      },\r\n      \"&:hover\": {\r\n        color: \"#b71c1c\",\r\n        \"& .MuiListItemIcon-root\": {\r\n          color: \"#b71c1c\"\r\n        }\r\n      }\r\n    },\r\n    selected: {}\r\n  })(MuiListItem);\r\n\r\nexport default function Todolist(props) {\r\n    const classes = useStyles();\r\n    const [taskID, setTaskID] = useState(\"\");\r\n    const [tasks, setTasks] = useState([]);\r\n    const [recentTasks, setRecent] = useState([]);\r\n    const [todayTask, setTodayTasks] = useState([]);\r\n    const [completedTasks, setCompletedTasks] = useState([]);\r\n    const [incompleteTasks, setIncompleteTasks] = useState([]);\r\n    const [dueTasks, setDueTasks] = useState([]);\r\n    const [title, setTitle] = useState(\"\");    \r\n    const [deadline, setDeadline] = useState(\"\");\r\n    const [completed, setCompleted] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [component, setComponent] = useState('all');\r\n    const alert = useAlert();\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const [checked, setChecked] = useState({checkedA : false, checkedA1: false, checkedB : false, checkedC : false,\r\n    checkedD : false, checkedE : false});\r\n    const [taskChecked, setTaskChecked] = useState(false);\r\n    const [state, setState] = useState({\r\n        left: false,\r\n    });\r\n\r\n    const [titleEdit, setTitleEdit] = useState(\"\");\r\n    const [deadlineEdit, setDeadlineEdit] = useState(\"\");\r\n    const [completedEdit, setCompletedEdit] = useState(false);\r\n    const [submittedEdit, setSubmittedEdit] = useState(false);\r\n    const [subOpen, setSubOpen] = useState(false);\r\n    const[editOpen, setEditOpen] = useState(false);\r\n    const [deleteOpen, setDeleteOpen] = useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n    };\r\n    \r\n    const handleDeleteOpen = () => {\r\n        setDeleteOpen(true);\r\n    };\r\n\r\n    const handleDeleteClose = () => {\r\n        setDeleteOpen(false);\r\n    }\r\n\r\n    const handleSubOpen = () => {\r\n        setSubOpen(true);\r\n    };\r\n\r\n    const handleSubClose = () => {\r\n        setSubOpen(false);\r\n    };\r\n\r\n    const setSubmittedStatus =  (submitted) => {\r\n        setSubmittedEdit(submitted);\r\n    }\r\n\r\n    const setCompletedStatus = (status) => {\r\n        setCompletedEdit(status);\r\n    }\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n        return;\r\n    }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n          className={(classes.list)}\r\n          role=\"presentation\"\r\n          onClick={toggleDrawer(anchor, false)}\r\n          onKeyDown={toggleDrawer(anchor, false)}>\r\n            <List>\r\n            <ListItem button key=\"All\" onClick={(event) => {handleChangeData(\"all\"); handleListItemClick(event, 0)}} \r\n            selected={selectedIndex === 0}>\r\n                    <ListItemIcon>{<AssignmentIcon/>}</ListItemIcon>\r\n                    <ListItemText primary=\"All\" />\r\n                </ListItem>\r\n                <ListItem button key=\"Today\" onClick={(event) => {handleChangeData(\"today\"); handleListItemClick(event, 1)}}\r\n                selected={selectedIndex === 1}>\r\n                    <ListItemIcon>{<TodayTwoToneIcon/>}</ListItemIcon>\r\n                    <ListItemText primary=\"Today\" />\r\n                </ListItem>\r\n                <ListItem button key={\"Recent\"} onClick={(event) => {handleChangeData(\"recent\"); handleListItemClick(event, 2)}}\r\n                selected={selectedIndex === 2}>\r\n                    <ListItemIcon>{<HistoryIcon/>}</ListItemIcon>\r\n                    <ListItemText primary={\"Recent\"} />\r\n                </ListItem>\r\n                \r\n            </List>\r\n            <Divider />\r\n            <List>\r\n            <ListItem button key={\"Complete\"} onClick={(event) => {handleChangeData(\"completed\"); handleListItemClick(event, 3)}}\r\n            selected={selectedIndex === 3}>\r\n                    <ListItemIcon>{<DoneIcon/>}</ListItemIcon>\r\n                    <ListItemText \r\n                    primary={\"Complete\"} />\r\n                </ListItem>\r\n                \r\n            <ListItem button key={\"Incomplete\"} onClick={(event) => {handleChangeData(\"incomplete\"); handleListItemClick(event, 4)}}\r\n            selected={selectedIndex === 4}>\r\n                    <ListItemIcon>{<ClearIcon/>}</ListItemIcon>\r\n                    <ListItemText primary={\"Incomplete\"} />\r\n            </ListItem>\r\n            </List>\r\n            <Divider/>\r\n            <List>\r\n                <ListItem  button key={\"Notification\"} onClick={(event) => {handleChangeData(\"Due\"); handleListItemClick(event, 5)}}\r\n            selected={selectedIndex === 5}>\r\n                    <ListItemIcon>{<Notifications/>}</ListItemIcon>\r\n                    <ListItemText primary={ <Badge color=\"secondary\" badgeContent={dueTasks.length}>\r\n                    <Typography>Due Tasks</Typography>\r\n                    </Badge>} />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    )\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const handleChange = (event, index) => {\r\n    console.log(event.target.checked)\r\n    setChecked({ ...checked, [event.target.name]: event.target.checked});\r\n  };\r\n\r\n  const getTasks = () => {\r\n    axios\r\n    .get(\r\n        `http://localhost:8000/server/usertasklist/${props.id}/`,\r\n        {\r\n          headers: {\r\n              Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }  \r\n    )\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        setTasks(res.data);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n        if (\r\n          err.response.status === 401 \r\n      ) {\r\n          alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n      } else if (err.response.status === 404) {\r\n            alert.show(\"Sorry, we are unable to fetch your task right now\")\r\n      } else {\r\n        console.log(err.response);\r\n        console.log(err.response.data.res);\r\n        alert.show(err.response.data.res);\r\n      }\r\n    }); }\r\n\r\n  const getRecentTasks = () => {\r\n    axios\r\n    .get(\r\n        `http://localhost:8000/server/userrecenttasklist/${props.id}/`,\r\n        {\r\n          headers: {\r\n              Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }  \r\n    )\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        setRecent(res.data);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n        if (\r\n          err.response.status === 401 \r\n      ) {\r\n          alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n      } else if (err.response.status === 404) {\r\n            alert.show(\"Sorry, we are unable to fetch your task right now\")\r\n      } else {\r\n        console.log(err.response);\r\n        console.log(err.response.data.res);\r\n        alert.show(err.response.data.res);\r\n      }\r\n    }); }\r\n\r\n  const getCompletedTask = () => {\r\n    axios\r\n    .get(\r\n        `http://localhost:8000/server/usercompletetasklist/${props.id}/`,\r\n        {\r\n            headers: {\r\n                Authorization:\r\n                    \"JWT \" + localStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n    )\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        setCompletedTasks(res.data);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n        if (\r\n          err.response.status === 401 \r\n      ) {\r\n          alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n      } else if (err.response.status === 404) {\r\n            alert.show(\"Sorry, we are unable to fetch your task right now\")\r\n      } else {\r\n        console.log(err.response);\r\n        console.log(err.response.data.res);\r\n        alert.show(err.response.data.res);\r\n      }\r\n    }); }\r\n\r\n  const getIncompleteTask = () => {\r\n    axios\r\n    .get(\r\n        `http://localhost:8000/server/userincompletetasklist/${props.id}/`,\r\n        {\r\n            headers: {\r\n                Authorization:\r\n                    \"JWT \" + localStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n    )\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        setIncompleteTasks(res.data);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n        if (\r\n          err.response.status === 401 \r\n      ) {\r\n          alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n      } else if (err.response.status === 404) {\r\n            alert.show(\"Sorry, we are unable to fetch your task right now\")\r\n      } else {\r\n        console.log(err.response);\r\n        console.log(err.response.data.res);\r\n        alert.show(err.response.data.res);\r\n      }\r\n    }); }\r\n\r\n  const getTodayTasks = () => {\r\n    axios\r\n    .get(\r\n        `http://localhost:8000/server/usertodaytasklist/${props.id}/`,\r\n        {\r\n            headers: {\r\n                Authorization:\r\n                    \"JWT \" + localStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n    )\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        setTodayTasks(res.data);\r\n        setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n        if (\r\n          err.response.status === 401 \r\n      ) {\r\n          alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n      } else if (err.response.status === 404) {\r\n            alert.show(\"Sorry, we are unable to fetch your task right now\")\r\n      } else {\r\n        console.log(err.response);\r\n        console.log(err.response.data.res);\r\n        alert.show(err.response.data.res);\r\n      }\r\n    }); }\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .get(\r\n        `http://localhost:8000/server/usertasklist/${props.id}/`,\r\n        {\r\n          headers: {\r\n              Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }  \r\n    )\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        setTasks(res.data);\r\n        setLoading(false);\r\n        getDueTask();\r\n    })\r\n    .catch((err) => {\r\n        if (\r\n          err.response.status === 401 \r\n      ) {\r\n          alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n      } else if (err.response.status === 404) {\r\n            alert.show(\"Sorry, we are unable to fetch your task right now\")\r\n      } else {\r\n        console.log(err.response);\r\n        console.log(err.response.data.res);\r\n        alert.show(err.response.data.res);\r\n      }\r\n    }); }, []);\r\n\r\nconst handleChangeData = (newType) => {\r\n    setComponent(newType);\r\n    if (newType == component) {\r\n        return;\r\n    }\r\n\r\n    if (newType == \"all\") {\r\n        getTasks();\r\n    } else if (newType == \"today\") {\r\n        getTodayTasks();\r\n    } else if (newType == 'recent') {\r\n        getRecentTasks();\r\n    } else if (newType == \"completed\") {\r\n        getCompletedTask();\r\n    } else if (newType == \"incomplete\") {\r\n        getIncompleteTask();\r\n    } else if (newType == \"Due\") {\r\n        getDueTask();\r\n    };\r\n    }\r\n\r\n    const getDueTask = () => {\r\n        axios\r\n        .get(`http://localhost:8000/server/viewduetask/${props.id}/`,\r\n    {\r\n      headers: {\r\n          Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n      },\r\n    })\r\n    .then((res) => {\r\n        setDueTasks(res.data);\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n    });\r\n    }\r\n\r\n    const handleCompleteTask = (e, taskid, index) => {\r\n        axios\r\n      .post(\r\n      `http://localhost:8000/server/completetask/`,\r\n      {\r\n          taskID : taskid,\r\n      },\r\n      {\r\n          headers: {\r\n              Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n          },\r\n      }\r\n  )\r\n  .then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      getTasks();\r\n      getTodayTasks();\r\n      getRecentTasks();\r\n      getCompletedTask();\r\n      getIncompleteTask();\r\n  })\r\n  .catch((err) => {\r\n    if (\r\n      err.response.status === 401 \r\n  ) {\r\n      alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n  } else if (err.response.status === 404) {\r\n        alert.show(\"Sorry, we are unable to fetch your task right now\")\r\n  } else {\r\n    console.log(err.response);\r\n    console.log(err.response.data.res);\r\n    alert.show(err.response.data.res);\r\n  }\r\n}); }\r\n\r\n    const handleSubmitTask = (e) => {\r\n        e.preventDefault();\r\n        axios\r\n      .post(\r\n      `http://localhost:8000/server/createtask/`,\r\n      {\r\n          userID : props.id,\r\n          title : title,\r\n          deadline : deadline,\r\n          completed : completed,\r\n          submitted : submitted,\r\n      },\r\n      {\r\n          headers: {\r\n              Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n          },\r\n      }\r\n  )\r\n  .then((res) => {\r\n      if (res.status === 200) {\r\n          handleSubClose();\r\n      }\r\n      console.log(res);\r\n      console.log(res.data);\r\n      setTitle(\"\");\r\n      setDeadline(\"\");\r\n      setCompleted(false);\r\n      setSubmitted(false);\r\n      getTasks();\r\n  })\r\n  .catch((err) => {\r\n    if (\r\n      err.response.status === 401 \r\n  ) {\r\n      alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n  } else if (err.response.status === 404) {\r\n        alert.show(\"Sorry, we have trouble in retrieving your task right now\")\r\n  } else {\r\n    console.log(err.response);\r\n    console.log(err.response.data.res);\r\n    alert.show(err.response.data.res);\r\n  }\r\n}); }\r\n    \r\n    const handleEditTask = (e) => {\r\n        e.preventDefault();\r\n        axios\r\n      .post(\r\n      `http://localhost:8000/server/edittask/`,\r\n      {\r\n          userID : props.id,\r\n          taskID : taskID,\r\n          title : titleEdit,\r\n          deadline : deadlineEdit,\r\n          completed : completedEdit,\r\n          submitted : submittedEdit,\r\n      },\r\n      {\r\n          headers: {\r\n              Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n          },\r\n      }\r\n  )\r\n  .then((res) => {\r\n    if (res.status === 200) {\r\n        handleEditClose();\r\n    }\r\n      console.log(res);\r\n      console.log(res.data);\r\n      setTitleEdit(\"\");\r\n      setDeadlineEdit(\"\");\r\n      setCompletedEdit(false);\r\n      setSubmittedEdit(false);\r\n      setTaskID(\"\");\r\n      getTasks();\r\n      getRecentTasks();\r\n      getTodayTasks();\r\n      getIncompleteTask();\r\n      getCompletedTask();\r\n      \r\n  })\r\n  .catch((err) => {\r\n    if (\r\n      err.response.status === 401 ||\r\n      err.response.status === 404\r\n  ) {\r\n      alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n  } else {\r\n    console.log(err.response);\r\n    console.log(err.response.data.res);\r\n    alert.show(err.response.data.res);\r\n  }\r\n}); \r\n    }\r\n\r\n    const handleDeleteTask = (e) => {\r\n        e.preventDefault();\r\n        axios\r\n        .delete(\r\n        `http://localhost:8000/server/deletetask/${taskID}/${props.id}/`,\r\n        {\r\n            headers: {\r\n                Authorization: \"JWT \" + localStorage.getItem(\"token\"),\r\n            },\r\n        }\r\n    )\r\n    .then((res) => {\r\n      if (res.status === 200) {\r\n        handleDeleteClose();\r\n        handleClick();\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n            This is a success message!\r\n            </Alert>\r\n        </Snackbar>\r\n        alert.show(\"Task deleted succesfully\")\r\n      }\r\n        console.log(res);\r\n        console.log(res.data);\r\n        setTaskID(\"\");\r\n        getTasks();\r\n        getRecentTasks();\r\n        getTodayTasks();\r\n        getIncompleteTask();\r\n        getCompletedTask();\r\n    })\r\n    .catch((err) => {\r\n      if (\r\n        err.response.status === 401 ||\r\n        err.response.status === 404\r\n    ) {\r\n        alert.show(\"Your session has expired. Please Log In again to answer this question\");\r\n    } else {\r\n      console.log(err.response);\r\n      console.log(err.response.data.res);\r\n      alert.show(err.response.data.res);\r\n    }\r\n  }); \r\n    }\r\n\r\n    const tickCompleted = () => {\r\n        setCompleted(true);\r\n    };\r\n\r\n    const tickSubmitted = () => {\r\n        setSubmitted(true);\r\n    }\r\n\r\n    const tickCompletedEdit = (event) => {\r\n        setCompletedEdit(event.target.checked);\r\n    };\r\n\r\n    const tickSubmittedEdit = (event) => {\r\n        setSubmittedEdit(event.target.checked);\r\n    }\r\n     \r\n    const handleEditOpen = (task) => {\r\n        setEditOpen(true);\r\n        setTitleEdit(task.title);\r\n        setDeadlineEdit(task.deadline);\r\n        setCompletedEdit(task.completed);\r\n        setSubmittedEdit(task.submitted);\r\n        setTaskID(task.taskID);\r\n    };\r\n\r\n    const handleEditClose = () => {\r\n        setEditOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <CssBaseline />\r\n        <div className={classes.root}>\r\n        {['left',].map((anchor) => (\r\n            <React.Fragment key={anchor}>\r\n                <Tooltip title=\"Menu\" aria-label=\"add\" onClick={toggleDrawer(anchor, true)} className={classes.tooltip}>\r\n                    <Fab className={classes.fab} style={{backgroundColor:\"#64485C\"}}>\r\n                        <MenuIcon/>\r\n                    </Fab>\r\n                </Tooltip>\r\n                <h1 style={{padding:\"25px\"}}>{component[0].toUpperCase() + component.substring(1)} Tasks</h1>\r\n                <Drawer  className={classes.drawer} classes={{\r\n                paper: classes.drawerPaper,}} anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                    {list(anchor)}\r\n                </Drawer>\r\n                <Tooltip title=\"Add Task\" aria-label=\"add\" className={classes.tooltip} onClick={handleSubOpen}>\r\n            <Fab className={classes.fab} style={{backgroundColor:\"#64485C\"}}>\r\n                <AddIcon/>\r\n            </Fab>\r\n            </Tooltip>\r\n            <Dialog open={subOpen}\r\n            onClose={handleSubClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            className={classes.modal}\r\n            >\r\n            <DialogTitle id=\"alert-dialog-title\">Add Task</DialogTitle>\r\n                <DialogContent> \r\n                    <form className={classes.form} onSubmit={handleSubmitTask}>\r\n                        <div>\r\n                            <div>\r\n                            <TextField\r\n                                style = {{width: \"40ch\"}}\r\n                                id=\"outlined-multiline-static\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Title\"\r\n                                value={title}\r\n                                onChange={(e) => {\r\n                                    setTitle(e.target.value);\r\n                                }}\r\n                                helperText=\"Title\"\r\n                                required>\r\n                                </TextField>\r\n                            </div>\r\n                            <div>\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    helperText=\"Deadline\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"datetime-local\"\r\n                                    value={deadline}\r\n                                    onChange={(e) => {\r\n                                        setDeadline(e.target.value);\r\n                                    }}\r\n                                    defaultValue=\"2017-05-24T10:30\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                            <FormControlLabel\r\n                            control={<Checkbox checked={checked.checkedB} onChange={(event) => {handleChange(event);tickCompleted()}}\r\n                             name=\"checkedB\" />}\r\n                            label=\"Completed\"\r\n                        />\r\n                            </div>\r\n                            <div>\r\n                            <FormControlLabel\r\n                            control={<Checkbox checked={checked.checkedC} onChange={(event) => {handleChange(event);tickSubmitted()}}\r\n                             name=\"checkedC\" />}\r\n                            label=\"Submitted\"\r\n                        />\r\n                            </div>  \r\n                        </div>\r\n                        <DialogActions>\r\n                        <Button type=\"submit\" disabled={(title == \"\") \r\n                        || (deadline == \"\") ? true : false}>\r\n                            Add\r\n                        </Button>\r\n                        <Button onClick={handleSubClose}>\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n            </React.Fragment>))}\r\n        </div>\r\n        <main className={classes.content}>\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection='column'\r\n                width = \"100%\"\r\n                alignItems =\"center\"\r\n                justifyContent=\"center\"\r\n                >\r\n            {loading ? (\r\n              <div className={classes.loading}>\r\n                  <FadeLoader\r\n                      loading={loading}\r\n                      color=\"#a1887f\"\r\n                      css={override}\r\n                      size={150}\r\n                  />\r\n              </div> ) : (\r\n                  <div>\r\n                {component == \"all\" && \r\n                <>\r\n                {tasks.length != 0 && component == \"all\" ? (tasks.map((task,index) =>\r\n                <Card className={classes.rootCard}>\r\n                    <CardContent className={classes.info} style={{paddingBottom:\"10px\"}}>\r\n                        <div>\r\n                            <Typography variant=\"body2\">\r\n                                {(task.deadline).split(\"T\")[0]}  &middot; \r\n                                {((task.deadline).split(\"T\")[1]).slice(0,5)} \r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\" align=\"left\" color=\"textSecondary\">\r\n                                {task.title}\r\n                            </Typography>\r\n                        </div>\r\n                        <div style={{flexDirection:\"row\"}}>         \r\n                        <CardActions>\r\n                            <FormControlLabel\r\n                            control={<Checkbox checked={task.completed} onChange={(event,index) => {handleChange(event,index);handleCompleteTask(event,task.taskID,index)}}\r\n                             name=\"checkedA\" />}\r\n                            label=\"Complete\"\r\n                        />\r\n                            <Button startIcon={<EditIcon/>} onClick={() => handleEditOpen(task)}/>\r\n                            <Dialog open={editOpen}\r\n                                onClose={handleEditClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                                className={classes.modal}\r\n                                >\r\n                                <DialogTitle id=\"alert-dialog-title\">Edit Task</DialogTitle>\r\n                                    <DialogContent> \r\n                                        <p>{editOpen ? \"true\" : \"false\"}</p>\r\n                                        <form className={classes.form} onSubmit={handleEditTask}>\r\n                                            <div>\r\n                                                <div>\r\n                                                <TextField\r\n                                                    style = {{width: \"40ch\"}}\r\n                                                    id=\"outlined-multiline-static\"\r\n                                                    variant=\"outlined\"\r\n                                                    placeholder=\"Title\"\r\n                                                    value={titleEdit}\r\n                                                    onChange={(e) => {\r\n                                                        setTitleEdit(e.target.value);\r\n                                                    }}\r\n                                                    helperText=\"Title\"\r\n                                                    required>\r\n                                                    </TextField>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <TextField\r\n                                                        id=\"datetime-local\"\r\n                                                        helperText=\"Deadline\"\r\n                                                        variant=\"outlined\"\r\n                                                        type=\"datetime-local\"\r\n                                                        value={deadlineEdit}\r\n                                                        onChange={(e) => {\r\n                                                            setDeadlineEdit(e.target.value);\r\n                                                        }}\r\n                                                        defaultValue=\"2017-05-24T10:30:00Z\"\r\n                                                        InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                        }}\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={completedEdit} \r\n                                                onChange={(event) => {handleChange(event); tickCompletedEdit(event)}}\r\n                                                name=\"checkedD\" />}\r\n                                                label=\"Completed\"\r\n                                            />\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={submittedEdit} \r\n                                                onChange={(event) => {handleChange(event);tickSubmittedEdit(event)}}\r\n                                                name=\"checkedE\" />}\r\n                                                label=\"Submitted\"\r\n                                            />\r\n                                                </div>  \r\n                                            </div>\r\n                                            <DialogActions>\r\n                                            <Button type=\"submit\" disabled={(titleEdit == \"\") \r\n                                            || (deadlineEdit == \"\") ? true : false}>\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button onClick={handleEditClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                        </DialogActions>\r\n                                        </form>\r\n                                    </DialogContent>\r\n                                </Dialog>\r\n                            <Button startIcon={<DeleteIcon/>} onClick={() => {handleDeleteOpen();setTaskID(task.taskID)}}/>\r\n                            <Dialog\r\n                                open={deleteOpen}\r\n                                onClose={handleDeleteClose}\r\n                                className={classes.modal}\r\n                                aria-labelledby=\"simple-dialog-title\"\r\n                                aria-describedby=\"simple-dialog-description\"\r\n                                >\r\n                                <DialogContent className={classes.paper}>\r\n                                    <DialogContentText>\r\n                                        <h4 id=\"simple-dialog-title\">Delete Event</h4>\r\n                                        <div className=\"modal-body text-left pt-3 pb-3\">\r\n                                            Are you sure you want to delete this task/exam? \r\n                                        </div>\r\n                                        <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                <Button variant = \"outlined\" className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\"\r\n                                                    style = {{margin:5}} onClick={handleDeleteTask}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                                <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\" \r\n                                                onClick={handleDeleteClose}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                            </div>\r\n                                    </DialogContentText>\r\n                            </DialogContent>\r\n                            </Dialog> \r\n                        </CardActions>\r\n                        </div>\r\n                        \r\n                    </CardContent>\r\n                </Card>)\r\n                ) : (\r\n                    <>\r\n                    {tasks.length == 0 &&\r\n                    \r\n                    <div className=\"card-body mr-4\">\r\n                        <img                         \r\n                        src='/images/nodata.svg'\r\n                        alt=\"No Task\"\r\n                        className={classes.topimg}\r\n                        />\r\n                        <Typography variant=\"h3\">\r\n                            No Tasks Made\r\n                        </Typography>\r\n                        \r\n                    </div>\r\n                        }\r\n                    </>\r\n                )}\r\n                </>}\r\n                {component == \"today\" &&\r\n                <>\r\n                    {todayTask.length != 0 ? ( todayTask.map((task) =>\r\n                    <Card className={classes.rootCard}>\r\n                        <CardContent className={classes.info} style={{paddingBottom:\"10px\"}}>\r\n                            <div>\r\n                                <Typography variant=\"body2\">\r\n                                    {(task.deadline).split(\"T\")[0]}  &middot; \r\n                                    {((task.deadline).split(\"T\")[1]).slice(0,5)} \r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align=\"left\" color=\"textSecondary\">\r\n                                    {task.title}\r\n                                </Typography>\r\n                            </div>\r\n                            <div style={{flexDirection:\"row\"}}>         \r\n                                <CardActions>\r\n                                    <FormControlLabel\r\n                                    control={<Checkbox checked={task.completed}\r\n                                     onChange={(event,index) => {handleChange(event,index);handleCompleteTask(event,task.taskID,index)}}/>}\r\n                                    label=\"Complete\"/>\r\n                                    <Button startIcon={<EditIcon/>} onClick={() => handleEditOpen(task)}/>\r\n                            <Dialog open={editOpen}\r\n                                onClose={handleEditClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                                className={classes.modal}\r\n                                >\r\n                                <DialogTitle id=\"alert-dialog-title\">Edit Task</DialogTitle>\r\n                                    <DialogContent> \r\n                                        <form className={classes.form} onSubmit={handleEditTask}>\r\n                                            <div>\r\n                                                <div>\r\n                                                <TextField\r\n                                                    style = {{width: \"40ch\"}}\r\n                                                    id=\"outlined-multiline-static\"\r\n                                                    variant=\"outlined\"\r\n                                                    placeholder=\"Title\"\r\n                                                    value={titleEdit}\r\n                                                    onChange={(e) => {\r\n                                                        setTitleEdit(e.target.value);\r\n                                                    }}\r\n                                                    helperText=\"Title\"\r\n                                                    required>\r\n                                                    </TextField>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <TextField\r\n                                                        id=\"datetime-local\"\r\n                                                        helperText=\"Deadline\"\r\n                                                        variant=\"outlined\"\r\n                                                        type=\"datetime-local\"\r\n                                                        value={deadlineEdit}\r\n                                                        onChange={(e) => {\r\n                                                            setDeadlineEdit(e.target.value);\r\n                                                        }}\r\n                                                        defaultValue=\"2017-05-24T10:30:00Z\"\r\n                                                        InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                        }}\r\n                                                        required\r\n                                                    />\r\n                                                    <p>{deadlineEdit}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={completedEdit} \r\n                                                onChange={(event) => {handleChange(event); tickCompletedEdit(event)}}\r\n                                                name=\"checkedD\" />}\r\n                                                label=\"Completed\"\r\n                                            />\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={submittedEdit} \r\n                                                onChange={(event) => {handleChange(event);tickSubmittedEdit(event)}}\r\n                                                name=\"checkedE\" />}\r\n                                                label=\"Submitted\"\r\n                                            />\r\n                                                </div>  \r\n                                            </div>\r\n                                            <DialogActions>\r\n                                            <Button type=\"submit\" disabled={(titleEdit == \"\") \r\n                                            || (deadlineEdit == \"\") ? true : false}>\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button onClick={handleEditClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                        </DialogActions>\r\n                                        </form>\r\n                                    </DialogContent>\r\n                                </Dialog>\r\n                                <Button startIcon={<DeleteIcon/>} onClick={() => {handleDeleteOpen();setTaskID(task.taskID)}}/>\r\n                            <Dialog\r\n                                open={deleteOpen}\r\n                                onClose={handleDeleteClose}\r\n                                className={classes.modal}\r\n                                aria-labelledby=\"simple-dialog-title\"\r\n                                aria-describedby=\"simple-dialog-description\"\r\n                                >\r\n                                <DialogContent className={classes.paper}>\r\n                                    <DialogContentText>\r\n                                        <h4 id=\"simple-dialog-title\">Delete Event</h4>\r\n                                        <div className=\"modal-body text-left pt-3 pb-3\">\r\n                                            Are you sure you want to delete this task/exam? \r\n                                        </div>\r\n                                        <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                <Button variant = \"outlined\" className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\"\r\n                                                    style = {{margin:5}} onClick={handleDeleteTask}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                                <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\" \r\n                                                onClick={handleDeleteClose}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                            </div>\r\n                                    </DialogContentText>\r\n                            </DialogContent>\r\n                            </Dialog> \r\n                                </CardActions>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>)\r\n                    ) : (\r\n                        <>\r\n                        {todayTask.length == 0 &&\r\n                            <div className=\"card-body mr-4\">\r\n                                <img                         \r\n                                src='/images/nodata.svg'\r\n                                alt=\"No Task\"\r\n                                className={classes.topimg}\r\n                                />\r\n                                <Typography variant=\"h5\">\r\n                                    No Task for You for Today\r\n                                </Typography>\r\n                            </div>\r\n                            }\r\n                        </>\r\n                    )}\r\n                </>}\r\n                {component == \"recent\" &&\r\n                <>\r\n                    {recentTasks.length != 0 ? (recentTasks.map((task) =>\r\n                    <Card className={classes.rootCard}>\r\n                        <CardContent className={classes.info} style={{paddingBottom:\"10px\"}}>\r\n                            <div>\r\n                                <Typography variant=\"body2\">\r\n                                    {(task.deadline).split(\"T\")[0]}  &middot; \r\n                                    {((task.deadline).split(\"T\")[1]).slice(0,5)} \r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align=\"left\" color=\"textSecondary\">\r\n                                    {task.title}\r\n                                </Typography>\r\n                            </div>\r\n                            <div style={{flexDirection:\"row\"}}>         \r\n                                <CardActions>\r\n                                    <FormControlLabel\r\n                                    control={<Checkbox  checked={task.completed}\r\n                                    onChange={(event,index) => \r\n                                        {handleChange(event,index);handleCompleteTask(event,task.taskID,index)}} name=\"checkedA1\" />}\r\n                                    label=\"Complete\"/>\r\n                                     <Button startIcon={<EditIcon/>} onClick={() => handleEditOpen(task)}/>\r\n                            <Dialog open={editOpen}\r\n                                onClose={handleEditClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                                className={classes.modal}\r\n                                >\r\n                                <DialogTitle id=\"alert-dialog-title\">Edit Task</DialogTitle>\r\n                                    <DialogContent> \r\n                                        <form className={classes.form} onSubmit={handleEditTask}>\r\n                                            <div>\r\n                                                <div>\r\n                                                <TextField\r\n                                                    style = {{width: \"40ch\"}}\r\n                                                    id=\"outlined-multiline-static\"\r\n                                                    variant=\"outlined\"\r\n                                                    placeholder=\"Title\"\r\n                                                    value={titleEdit}\r\n                                                    onChange={(e) => {\r\n                                                        setTitleEdit(e.target.value);\r\n                                                    }}\r\n                                                    helperText=\"Title\"\r\n                                                    required>\r\n                                                    </TextField>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <TextField\r\n                                                        id=\"datetime-local\"\r\n                                                        helperText=\"Deadline\"\r\n                                                        variant=\"outlined\"\r\n                                                        type=\"datetime-local\"\r\n                                                        value={deadlineEdit}\r\n                                                        onChange={(e) => {\r\n                                                            setDeadlineEdit(e.target.value);\r\n                                                        }}\r\n                                                        defaultValue=\"2017-05-24T10:30:00Z\"\r\n                                                        InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                        }}\r\n                                                        required\r\n                                                    />\r\n                                                    <p>{deadlineEdit}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={completedEdit} \r\n                                                onChange={(event) => {handleChange(event); tickCompletedEdit(event)}}\r\n                                                name=\"checkedD\" />}\r\n                                                label=\"Completed\"\r\n                                            />\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={submittedEdit} \r\n                                                onChange={(event) => {handleChange(event);tickSubmittedEdit(event)}}\r\n                                                name=\"checkedE\" />}\r\n                                                label=\"Submitted\"\r\n                                            />\r\n                                                </div>  \r\n                                            </div>\r\n                                            <DialogActions>\r\n                                            <Button type=\"submit\" disabled={(titleEdit == \"\") \r\n                                            || (deadlineEdit == \"\") ? true : false}>\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button onClick={handleEditClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                        </DialogActions>\r\n                                        </form>\r\n                                    </DialogContent>\r\n                                </Dialog>\r\n                                <Button startIcon={<DeleteIcon/>} onClick={() => {handleDeleteOpen();setTaskID(task.taskID)}}/>\r\n                            <Dialog\r\n                                open={deleteOpen}\r\n                                onClose={handleDeleteClose}\r\n                                className={classes.modal}\r\n                                aria-labelledby=\"simple-dialog-title\"\r\n                                aria-describedby=\"simple-dialog-description\"\r\n                                >\r\n                                <DialogContent className={classes.paper}>\r\n                                    <DialogContentText>\r\n                                        <h4 id=\"simple-dialog-title\">Delete Event</h4>\r\n                                        <div className=\"modal-body text-left pt-3 pb-3\">\r\n                                            Are you sure you want to delete this task/exam? \r\n                                        </div>\r\n                                        <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                <Button variant = \"outlined\" className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\"\r\n                                                    style = {{margin:5}} onClick={handleDeleteTask}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                                <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\" \r\n                                                onClick={handleDeleteClose}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                            </div>\r\n                                    </DialogContentText>\r\n                            </DialogContent>\r\n                            </Dialog> \r\n                                </CardActions>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>)\r\n                    ) : (\r\n                        <>\r\n                        {recentTasks.length == 0 &&\r\n                            <div className=\"card-body mr-4\">\r\n                                <img                         \r\n                                src='/images/nodata.svg'\r\n                                alt=\"No Task\"\r\n                                className={classes.topimg}\r\n                                />\r\n                                <Typography variant=\"h5\">\r\n                                    No Recent Tasks\r\n                                </Typography>\r\n                            </div>\r\n                            }\r\n                        </>\r\n                    )}\r\n                </>}\r\n                {component == \"completed\" &&\r\n                <>\r\n                    {completedTasks.length != 0 ? (completedTasks.map((task) =>\r\n                    <Card className={classes.rootCard}>\r\n                        <CardContent className={classes.info}  style={{paddingBottom:\"10px\"}}>\r\n                            <div>\r\n                                <Typography variant=\"body2\">\r\n                                    {(task.deadline).split(\"T\")[0]}  &middot; \r\n                                    {((task.deadline).split(\"T\")[1]).slice(0,5)} \r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align=\"left\" color=\"textSecondary\">\r\n                                    {task.title}\r\n                                </Typography>\r\n                            </div>\r\n                            <div style={{flexDirection:\"row\"}}>         \r\n                                <CardActions>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={task.completed} onChange={(event) => {handleChange(event);handleCompleteTask(event,task.taskID)}}\r\n                                    name=\"checkedA\" />}\r\n                                    label=\"Complete\"\r\n                                />\r\n                                    <Button startIcon={<EditIcon/>} onClick={handleEditOpen}/>\r\n                                    <Dialog open={editOpen}\r\n                                onClose={handleEditClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                                className={classes.modal}\r\n                                >\r\n                                <DialogTitle id=\"alert-dialog-title\">Edit Task</DialogTitle>\r\n                                    <DialogContent> \r\n                                        <form className={classes.form} onSubmit={handleEditTask}>\r\n                                            <div>\r\n                                                <div>\r\n                                                <TextField\r\n                                                    style = {{width: \"40ch\"}}\r\n                                                    id=\"outlined-multiline-static\"\r\n                                                    variant=\"outlined\"\r\n                                                    placeholder=\"Title\"\r\n                                                    value={titleEdit}\r\n                                                    onChange={(e) => {\r\n                                                        setTitleEdit(e.target.value);\r\n                                                    }}\r\n                                                    helperText=\"Title\"\r\n                                                    required>\r\n                                                    </TextField>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <TextField\r\n                                                        id=\"datetime-local\"\r\n                                                        helperText=\"Deadline\"\r\n                                                        variant=\"outlined\"\r\n                                                        type=\"datetime-local\"\r\n                                                        value={deadlineEdit}\r\n                                                        onChange={(e) => {\r\n                                                            setDeadlineEdit(e.target.value);\r\n                                                        }}\r\n                                                        defaultValue=\"2017-05-24T10:30:00Z\"\r\n                                                        InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                        }}\r\n                                                        required\r\n                                                    />\r\n                                                    <p>{deadlineEdit}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={completedEdit} \r\n                                                onChange={(event) => {handleChange(event); tickCompletedEdit(event)}}\r\n                                                name=\"checkedD\" />}\r\n                                                label=\"Completed\"\r\n                                            />\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={submittedEdit} \r\n                                                onChange={(event) => {handleChange(event);tickSubmittedEdit(event)}}\r\n                                                name=\"checkedE\" />}\r\n                                                label=\"Submitted\"\r\n                                            />\r\n                                                </div>  \r\n                                            </div>\r\n                                            <DialogActions>\r\n                                            <Button type=\"submit\" disabled={(titleEdit == \"\") \r\n                                            || (deadlineEdit == \"\") ? true : false}>\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button onClick={handleEditClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                        </DialogActions>\r\n                                        </form>\r\n                                    </DialogContent>\r\n                                </Dialog>\r\n                                <Button startIcon={<DeleteIcon/>} onClick={() => {handleDeleteOpen();setTaskID(task.taskID)}}/>\r\n                            <Dialog\r\n                                open={deleteOpen}\r\n                                onClose={handleDeleteClose}\r\n                                className={classes.modal}\r\n                                aria-labelledby=\"simple-dialog-title\"\r\n                                aria-describedby=\"simple-dialog-description\"\r\n                                >\r\n                                <DialogContent className={classes.paper}>\r\n                                    <DialogContentText>\r\n                                        <h4 id=\"simple-dialog-title\">Delete Event</h4>\r\n                                        <div className=\"modal-body text-left pt-3 pb-3\">\r\n                                            Are you sure you want to delete this task/exam? \r\n                                        </div>\r\n                                        <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                <Button variant = \"outlined\" className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\"\r\n                                                    style = {{margin:5}} onClick={handleDeleteTask}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                                <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\" \r\n                                                onClick={handleDeleteClose}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                            </div>\r\n                                    </DialogContentText>\r\n                            </DialogContent>\r\n                            </Dialog> \r\n                                </CardActions>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>)\r\n                    ) : (\r\n                        <>\r\n                        {completedTasks.length == 0 &&\r\n                            <div className=\"card-body mr-4\">\r\n                                <img                         \r\n                                src='/images/nodata.svg'\r\n                                alt=\"No Task\"\r\n                                className={classes.topimg}\r\n                                />\r\n                                <Typography variant=\"h5\">\r\n                                    No Completed Tasks\r\n                                </Typography>\r\n                            </div>\r\n                            }\r\n                        </>\r\n                    )}\r\n                </>}\r\n                {component == \"incomplete\" &&\r\n                <>\r\n                {incompleteTasks.length != 0 ? (incompleteTasks.map((task) =>\r\n                    <Card className={classes.rootCard}>\r\n                        <CardContent className={classes.info}  style={{paddingBottom:\"10px\"}}>\r\n                            <div>\r\n                                <Typography variant=\"body2\">\r\n                                    {(task.deadline).split(\"T\")[0]}  &middot; \r\n                                    {((task.deadline).split(\"T\")[1]).slice(0,5)} \r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align=\"left\" color=\"textSecondary\">\r\n                                    {task.title}\r\n                                </Typography>\r\n                            </div>\r\n                            <div style={{flexDirection:\"row\"}}>         \r\n                                <CardActions>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={task.completed} onChange={(event) => {handleChange(event);handleCompleteTask(event,task.taskID)}}\r\n                                    name=\"checkedA\" />}\r\n                                    label=\"Complete\"\r\n                                />\r\n                                    <Button startIcon={<EditIcon/>} onClick={handleEditOpen}/>\r\n                                    <Dialog open={editOpen}\r\n                                onClose={handleEditClose}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                                className={classes.modal}\r\n                                >\r\n                                <DialogTitle id=\"alert-dialog-title\">Edit Task</DialogTitle>\r\n                                    <DialogContent> \r\n                                        <form className={classes.form} onSubmit={handleEditTask}>\r\n                                            <div>\r\n                                                <div>\r\n                                                <TextField\r\n                                                    style = {{width: \"40ch\"}}\r\n                                                    id=\"outlined-multiline-static\"\r\n                                                    variant=\"outlined\"\r\n                                                    placeholder=\"Title\"\r\n                                                    value={titleEdit}\r\n                                                    onChange={(e) => {\r\n                                                        setTitleEdit(e.target.value);\r\n                                                    }}\r\n                                                    helperText=\"Title\"\r\n                                                    required>\r\n                                                    </TextField>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <TextField\r\n                                                        id=\"datetime-local\"\r\n                                                        helperText=\"Deadline\"\r\n                                                        variant=\"outlined\"\r\n                                                        type=\"datetime-local\"\r\n                                                        value={deadlineEdit}\r\n                                                        onChange={(e) => {\r\n                                                            setDeadlineEdit(e.target.value);\r\n                                                        }}\r\n                                                        defaultValue=\"2017-05-24T10:30:00Z\"\r\n                                                        InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                        }}\r\n                                                        required\r\n                                                    />\r\n                                                    <p>{deadlineEdit}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={completedEdit} \r\n                                                onChange={(event) => {handleChange(event); tickCompletedEdit(event)}}\r\n                                                name=\"checkedD\" />}\r\n                                                label=\"Completed\"\r\n                                            />\r\n                                                </div>\r\n                                                <div>\r\n                                                <FormControlLabel\r\n                                                control={<Checkbox checked={submittedEdit} \r\n                                                onChange={(event) => {handleChange(event);tickSubmittedEdit(event)}}\r\n                                                name=\"checkedE\" />}\r\n                                                label=\"Submitted\"\r\n                                            />\r\n                                                </div>  \r\n                                            </div>\r\n                                            <DialogActions>\r\n                                            <Button type=\"submit\" disabled={(titleEdit == \"\") \r\n                                            || (deadlineEdit == \"\") ? true : false}>\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button onClick={handleEditClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                        </DialogActions>\r\n                                        </form>\r\n                                    </DialogContent>\r\n                                </Dialog>\r\n                                <Button startIcon={<DeleteIcon/>} onClick={() => {handleDeleteOpen();setTaskID(task.taskID)}}/>\r\n                            <Dialog\r\n                                open={deleteOpen}\r\n                                onClose={handleDeleteClose}\r\n                                className={classes.modal}\r\n                                aria-labelledby=\"simple-dialog-title\"\r\n                                aria-describedby=\"simple-dialog-description\"\r\n                                >\r\n                                <DialogContent className={classes.paper}>\r\n                                    <DialogContentText>\r\n                                        <h4 id=\"simple-dialog-title\">Delete Event</h4>\r\n                                        <div className=\"modal-body text-left pt-3 pb-3\">\r\n                                            Are you sure you want to delete this task/exam? \r\n                                        </div>\r\n                                        <div className=\"row content ml-1 mr-1 pt-5 d-flex justify-content-center\">\r\n                                                <Button variant = \"outlined\" className=\"btn btn-default col-sm-5 btn-outline-danger mr-2\"\r\n                                                    style = {{margin:5}} onClick={handleDeleteTask}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                                <Button variant = \"outlined\" style = {{margin:5}} className=\"btn btn-default col-sm-5 btn-outline-secondary\" \r\n                                                onClick={handleDeleteClose}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                            </div>\r\n                                    </DialogContentText>\r\n                            </DialogContent>\r\n                            </Dialog> \r\n                                </CardActions>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>)\r\n                    ) : (\r\n                        <>\r\n                        {incompleteTasks.length == 0 &&\r\n                            <div className=\"card-body mr-4\">\r\n                                <img                         \r\n                                src='/images/nodata.svg'\r\n                                alt=\"No Task\"\r\n                                className={classes.topimg}\r\n                                />\r\n                                <Typography variant=\"h5\">\r\n                                    No Incomplete Tasks\r\n                                </Typography>\r\n                            </div>\r\n                            }\r\n                        </>\r\n                    )}\r\n                </>}\r\n                {component == \"Due\" &&\r\n                <>\r\n                    {dueTasks.length != 0 ? (dueTasks.map((task) =>\r\n                    <>\r\n                    <Card className={classes.rootCard} elevation=\"0\">\r\n                        <CardContent className={classes.info}  style={{paddingBottom:\"10px\"}}>\r\n                            <div>\r\n                                <Typography variant=\"body2\">\r\n                                    {task.message}\r\n                                </Typography>\r\n                                </div>\r\n                                </CardContent>\r\n                                </Card>\r\n                                <Divider/>\r\n                                </>)) : (\r\n                                    <>\r\n                                    {dueTasks.length == 0 &&\r\n                                        <div className=\"card-body mr-4\">\r\n                                            <img                         \r\n                                            src='/images/nodata.svg'\r\n                                            alt=\"No Task\"\r\n                                            className={classes.topimg}\r\n                                            />\r\n                                            <Typography variant=\"h5\">\r\n                                                Everything has been submitted\r\n                                            </Typography>\r\n                                        </div>\r\n                                        }\r\n                                    </>\r\n                                )}</>}\r\n\r\n                </div>)}\r\n            </Box>\r\n        </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\n\n\nimport \"./App.css\";\nimport { Switch, Route, withRouter,  useLocation  } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport IntroSection from './components/intro-section';\nimport SignUp from \"./pages/signup\";\nimport Login from \"./pages/login\";\nimport { useAlert } from \"react-alert\";\nimport Navbar from \"./components/navbar\";\nimport Forum from './pages/forum';\nimport PostHistory from './pages/posthistory';\nimport PostPage from './pages/postpage';\nimport Account from './pages/account';\nimport Timetable from './pages/timetable';\nimport Todolist from './pages/todolist';\nimport axios from 'axios';\nimport { makeStyles } from \"@material-ui/core\";\n\n\nfunction App(props) {\n    const [isLoggedIn, setIsLoggedIn] = useState(\n        localStorage.getItem(\"token\") ? true : false\n    );\n    const [username, setUsername] = useState(\"\");\n    const [id, setID] = useState(\"\");\n    const [isStaff, setIsStaff] = useState(false);\n    const [active, setActive] = useState(\"\");\n    const alert = useAlert();\n\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            fetch(\"http://localhost:8000/server/current_user/\", {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n                },\n            })\n                .then((res) => res.json())\n                .then((json) => {\n                    setUsername(json.username);\n                    setID(json.id);\n                    setIsStaff(json.is_staff);\n                });\n        }\n    }, [isLoggedIn]);\n    const handleRegister = (e, data) => {\n        e.preventDefault();\n        fetch(\"http://localhost:8000/server/users/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => {\n                console.log(res);\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    throw new Error(\"Error\");\n                }\n            })\n            .then((json) => {\n                localStorage.setItem(\"token\", json.token);\n                props.history.push(\"/login\");\n            })\n            .catch((error) => {\n                alert.show(\"That Username Already Exists\");\n            });\n    };\n\n    const handleLogin = (e, data) => {\n        console.log(data);\n        e.preventDefault();\n        fetch(\"http://localhost:8000/token-auth/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    throw new Error(\"Error\");\n                }\n            })\n            .then((json) => {\n                localStorage.setItem(\"token\", json.token);\n                setIsLoggedIn(true);\n                setUsername(json.user.username);\n                setID(json.user.id);\n                setIsStaff(json.is_staff);\n                props.history.push(\"/\");\n            })\n            .catch((error) => alert.show(\"Wrong Username or Password\"));\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"token\");\n        setIsLoggedIn(false);\n        setUsername(\"\");\n        alert.show(\"Logged Out\");\n    };\n\n    return (\n        <div className=\"App\">\n            {(props.location.pathname !== '/sign-up' && props.location.pathname !== '/login'\n            ) && <Navbar\n                {...props}\n                active={active}\n                setActive={setActive}\n                isLoggedIn={isLoggedIn}\n                isStaff = {isStaff}\n                username={username}\n                handleLogout={handleLogout}\n            />}\n \n\n\n            {(props.location.pathname == '/') && <IntroSection\n                active={active}\n                setActive={setActive}\n                isLoggedIn={isLoggedIn}\n                username={username}\n                handleLogout={handleLogout}\n            />}     \n\n            <Switch>\n  \n\n                <Route\n                    path=\"/sign-up\"\n                    render={(props) => (\n                    <SignUp {...props} handleRegister={handleRegister} />\n                    )}\n                />\n                <Route\n                    path=\"/login\"\n                    render={(props) => (\n                        <Login {...props} handleLogin={handleLogin} />\n                    )}\n                />\n                                <Route\n                    path=\"/profile\"\n                    render={(props) => (\n                        <Account\n                            {...props}\n                            username={username}\n                            id={id}\n                            isStaff={isStaff}\n                        />\n                    )}\n                />\n                <Route\n                    path=\"/forum\"\n                    render={(props) => (\n                        <Forum\n                            {...props}\n                            username={username}\n                            id={id}\n                            isStaff={isStaff}\n                        />\n                    )}\n                />\n                <Route\n                    path=\"/post\"\n                    render={(props) => (\n                        <PostHistory\n                            {...props}\n                            username={username}\n                            id={id}\n                            isStaff={isStaff}\n                        />\n                    )}\n                />\n\n                <Route\n                    path=\"/forum\"\n                    render={(props) => (\n                        <Forum\n                        {...props} setActive={setActive}\n                        />\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/post-page/:postID\"\n                    render={(props) => <PostPage {...props} id={id} />}\n                />\n\n                <Route\n                    path='/schedules'\n                    render={(props) => (\n                        <Timetable\n                            {...props}\n                            username={username}\n                            id={id}\n                            isStaff={isStaff}\n                        />\n                    )}\n                />\n\n                <Route\n                    path='/todolist'\n                    render={(props) => (\n                        <Todolist\n                            {...props}\n                            username={username}\n                            id={id}\n                            isStaff={isStaff}\n                        />\n                    )}\n                />\n                <Route path='/'  render={(props) => (\n                        <Home\n                            {...props}\n                            username={username}\n                            id={id}\n                            isStaff={isStaff}\n                        />\n                    )}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default withRouter(App);","import React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport { createBrowserHistory } from \"history\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport axios from 'axios';\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main:  \"#3B3530\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            main: \"#CEC4BB\",\n            contrastText: \"#000\",\n        },\n        text: {\n            primary: \"#4E3A35\",\n            secondary: \"#564B48\",\n        },\n    },\n    typography: {\n        fontFamily: [\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Segoe UI\"',\n            \"Roboto\",\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(\",\"),\n    },\n});\n\nconst options = {\n    // you can also just use 'bottom center'\n    position: positions.TOP_CENTER,\n    timeout: 5000,\n    offset: \"80px\",\n    // you can also just use 'scale'\n    transition: transitions.SCALE,\n    type: \"error\",\n};\n\nlet history = createBrowserHistory();\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <Router history={history}>\n                <AlertProvider template={AlertTemplate} {...options}>\n                    <App />\n                </AlertProvider>\n            </Router>\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}